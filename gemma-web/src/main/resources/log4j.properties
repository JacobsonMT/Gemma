# This is the configuring for logging displayed in the Application Server
# The name of the logger is 'stderr'.
log4j.rootCategory=WARN, stderr

# Replace the line above if you want to put a log file into the directory 
# you start Tomcat from. The name of the logger is 'R'.
# log4j.rootCategory=INFO, stderr, R

log4j.appender.stderr=org.apache.log4j.ConsoleAppender
log4j.appender.stderr.target=System.err
log4j.appender.stderr.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stderr.layout.ConversionPattern=[Gemma] %p [%t] %C.%M(%L) | %m%n

log4j.appender.R=org.apache.log4j.RollingFileAppender

# You can change this to be an absolute path or even an environment variable
# If you're using an environment variable, you will have to set JAVA_OPTS
# to contain this variables - for example in the catalina.sh or catalina.bat
# file

log4j.appender.R.File=gemma.log

log4j.appender.R.MaxFileSize=100KB

# Don't keep a backup file
log4j.appender.R.MaxBackupIndex=0

log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%p %t %c - %m%n

# Configuration for receiving e-mails when ERROR messages occur.
log4j.appender.mail=org.apache.log4j.net.SMTPAppender
log4j.appender.mail.To=paul@ubic.ca
log4j.appender.mail.From=log4j.gemma
log4j.appender.mail.SMTPHost=localhost
log4j.appender.mail.Threshold=ERROR
log4j.appender.mail.BufferSize=1
log4j.appender.mail.Subject=[Server] Gemma Application Error

log4j.appender.mail.layout=org.apache.log4j.PatternLayout
log4j.appender.mail.layout.ConversionPattern=%d  %-5p %c %x - %m%n

# If programmed properly the most messages would be at DEBUG 
# and the least at FATAL.
log4j.logger.ubic.gemma=WARN
#log4j.logger.ubic.gemma.loader.util.persister.AbstractPersister=DEBUG
log4j.logger.ubic.gemma.web=DEBUG
#log4j.logger.ubic.gemma.web.listener.StartupListener=DEBUG
#log4j.logger.ubic.gemma.web.controller.flow.action=DEBUG
#log4j.logger.ubic.gemma.loader=INFO
#log4j.logger.ubic.gemma.loader.util.persister.PersisterHelper=DEBUG
#log4j.logger.ubic.gemma.loader.expression.mage.MageMLConverter=INFO
#log4j.logger.ubic.gemma.loader.description.OntologyEntryPersister=DEBUG
#log4j.logger.ubic.gemma.loader.expression.mage.MageMLParser=INFO
#log4j.logger.ubic.gemma.util=WARN
#log4j.logger.ubic.gemma.util=DEBUG
#log4j.logger.ubic.gemma.loader.util.parser=DEBUG
#log4j.logger.ubic.gemma.apps.Blat=DEBUG
#log4j.logger.ubic.gemma.apps.SequenceManipulation=INFO
#log4j.logger.ubic.gemma.apps.GoldenPath=INFO
#log4j.logger.ubic.gemma.apps.RCommander=DEBUG
#log4j.logger.ubic.gemma.apps.ProbeMapper=DEBUG
#log4j.logger.ubic.gemma.loader.expression.ExpressionLoaderImpl=DEBUG
#log4j.logger.ubic.gemma.loader.expression.geo=INFO
#log4j.logger.ubic.gemma.loader.expression.geo.GeoConverter=INFO
#log4j.logger.ubic.gemma.loader.loaderutils.MgedOntologyHelper=INFO
#log4j.logger.ubic.gemma.loader.loaderutils.PersisterHelper=INFO
#log4j.logger.ubic.gemma.model.common.protocol=ERROR
#log4j.logger.ubic.gemma.model.expression.designElement.ReporterDaoImpl=INFO
#log4j.logger.ubic.gemma.security=INFO
#log4j.logger.ubic.gemma.security.interceptor.AuditInterceptor=INFO

#log4j.logger.baseCode.util.FileTools=INFO
#log4j.logger.baseCode.util.RCommand=DEBUG

# Control logging for other packages
#log4j.logger.org.andromda=WARN
#log4j.logger.com.opensymphony.oscache=ERROR
#log4j.logger.net.sf.navigator=ERROR
#log4j.logger.org.apache.commons=ERROR
#log4j.logger.org.apache.struts=WARN
#log4j.logger.org.displaytag=ERROR
#log4j.logger.org.springframework=DEBUG
#log4j.logger.org.springframework.test=WARN
##log4j.logger.org.springframework.context.access=WARN
##log4j.logger.org.springframework.beans.factory.access=WARN
##log4j.logger.org.springframework.web.servlet.DispatcherServlet=WARN
##log4j.logger.org.springframework.web.servlet.handler.SimpleUrlHandlerMapping=DEBUG
##log4j.logger.org.springframework.web.servlet.mvc.UrlFilenameViewController=DEBUG
##log4j.logger.org.springframework.test.AbstractTransactionalSpringContextTests=WARN
##log4j.logger.org.springframework.orm.hibernate3.support.OpenSessionInViewFilter=DEBUG
#log4j.logger.org.springframework.webflow=ERROR
#log4j.logger.com.ibatis.db=WARN
#log4j.logger.org.apache.velocity=FATAL
# Acegi
#log4j.logger.org.acegisecurity=WARN
log4j.logger.org.acegisecurity.event.authentication.LoggerListener=ERROR
log4j.logger.org.acegisecurity.event.authorization.LoggerListener=ERROR
#log4j.logger.org.acegisecurity.intercept.method.MethodDefinitionMap=WARN
#log4j.logger.org.acegisecurity.intercept.method.aopalliance.AbstractSecurityInterceptor=DEBUG
# #log4j.logger.org.apache=DEBUG

# Don't show debug logs for WebTest
#log4j.logger.com.canoo.webtest=WARN

# All hibernate log output of "info" level or higher goes to stderr.
# For more verbose logging, change the "info" to "debug" on the last line.
#log4j.logger.org.hibernate.ps.PreparedStatementCache=WARN
#log4j.logger.org.hibernate=WARN

############ HIBERNATE LOGGING ################
# To turn these on set them to "debug".

# To see Hibernate sql.
#log4j.logger.org.hibernate.SQL=DEBUG

# 	Log all JDBC parameters (ie in queries '?')
#log4j.logger.org.hibernate.type=DEBUG

# 	Log all SQL DDL statements as they are executed
log4j.logger.org.hibernate.tool.hbm2ddl=INFO

# 	Log the state of all entities (max 20 entities) associated with the session at flush time
#log4j.logger.org.hibernate.pretty=DEBUG

# Log all second-level cache activity
log4j.logger.org.hibernate.cache=INFO

# 	Log transaction related activity
log4j.logger.org.hibernate.transaction=INFO

# 	Log all JDBC resource acquisition
log4j.logger.org.hibernate.jdbc=INFO

# 	Log HQL and SQL ASTs during query parsing
log4j.logger.org.hibernate.hql.ast.AST=WARN

# Log all JAAS authorization requests
log4j.logger.org.hibernate.secure=INFO

# Log everything (a lot of information, but very useful for troubleshooting)
log4j.logger.org.hibernate=FATAL

# Extras for hibernate:
# Avoid warnings about expired objects.
log4j.logger.org.hibernate.cache.ReadWriteCache=ERROR


