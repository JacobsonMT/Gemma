<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">
	<display-name>Gemma</display-name>

	<!-- Define the CSS Theme, put in servlet context by StartupListener -->
	<context-param>
		<param-name>theme</param-name>
		<param-value>antisense</param-value>
	</context-param>

	<!-- Define the basename for a resource bundle for I18N -->
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>messages</param-value>
	</context-param>

	<!-- Fallback locale if no bundles found for browser's preferred locale -->
	<!-- Force a single locale using param-name 'javax.servlet.jsp.jstl.fmt.locale' -->
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.fallbackLocale</param-name>
		<param-value>en</param-value>
	</context-param>

	<!-- Name of Log4j config file relative to webapp root directory.  This is 
		done by the org.springframework.web.util.Log4jWebConfigurer -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>

	<!-- Context Configuration locations for Spring XML files -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:/ubic/gemma/applicationContext-*.xml,classpath*:/ubic/gemma/dataSource.xml
		</param-value>
	</context-param>

	<!-- Gemma Project Filters.  -->

	<!-- Acegi. This filter maps to a bean defined in applicationContext-security.xml, 
		which handles filtering of requests through the security managers.  -->
	<filter>
		<filter-name>securityFilter</filter-name>
		<filter-class>org.acegisecurity.util.FilterToBeanProxy</filter-class>
		<init-param>
			<param-name>targetClass</param-name>
			<param-value>org.acegisecurity.util.FilterChainProxy</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>cacheFilter</filter-name>
		<filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
	</filter>

	<!--  Filter that passes pages through sitemesh. Must come after acegi filter -->
 
	<filter>
		<filter-name>clickstreamFilter</filter-name>
		<filter-class>com.opensymphony.clickstream.ClickstreamFilter</filter-class>
	</filter>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>rewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
			<param-name>logLevel</param-name>
			<param-value>commons</param-value>
		</init-param>
	</filter>
	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
	</filter>

	<filter>
		<filter-name>exportFilter</filter-name>
		<filter-class>org.displaytag.filter.ResponseOverrideFilter</filter-class>
	</filter>
	<!--
		This caused big performance problems.
		<filter>
		<filter-name>compressionFilter</filter-name>
		<filter-class>ubic.gemma.web.filter.GZIPFilter</filter-class>
		</filter>
		
	-->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/j_security_check</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/dwr/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<!-- Acegi -->
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/j_security_check</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>/dwr/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>securityFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<!-- Commented out for 2 reasons: 1) it's a pain when developing JSPs, and
		2) it causes the Signup webtest to fail -->
	<!--filter-mapping>
		<filter-name>cacheFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
		</filter-mapping-->

	<filter-mapping>
		<filter-name>clickstreamFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>exportFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<!--
		
		<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>*.css</url-pattern>
		</filter-mapping>
		<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
		</filter-mapping>
		<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>*.js</url-pattern>
		</filter-mapping>
		<filter-mapping>
		<filter-name>compressionFilter</filter-name>
		<url-pattern>*.html</url-pattern>
		</filter-mapping>
		
	-->
	<filter-mapping>
		<filter-name>rewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<!-- All requests are decorated with sitemesh -->
	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<listener>
		<listener-class>com.opensymphony.clickstream.ClickstreamListener</listener-class>
	</listener>
	<listener>
		<listener-class>net.sf.navigator.menu.MenuContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<listener-class>ubic.gemma.web.listener.StartupListener</listener-class>
	</listener>
	<listener>
		<listener-class>ubic.gemma.web.listener.UserCounterListener</listener-class>
	</listener>

	<!-- Dispatch Servlet Configuration -->
	<servlet>
		<description>Everything from Gemma.</description>
		<servlet-name>action</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>SparkLines</servlet-name>
		<servlet-class>com.representqueens.spark.service.SparkController</servlet-class>
	</servlet>

	<!--  servlet mappings -->
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.txt</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.ico</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>

	<!-- static content; the /s/ gets stripped from the url and we use a rewrite so the user doesn't see it. -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/s/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>SparkLines</servlet-name>
		<url-pattern>/spark</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>500</error-code>
		<location>/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>400</error-code>
		<location>/index.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/403.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>

	<jsp-config>
		<taglib>
			<taglib-uri>/WEB-INF/Gemma.tld</taglib-uri>
			<taglib-location>/WEB-INF/Gemma.tld</taglib-location>
		</taglib>
	</jsp-config>

	<!--  AjaxAnywhere DEPRECATED - we are ceasing to use this. -->
	<!--  This has to be last (or near it) in order for the filter 
		to be triggered after the page has been processed -->
	<filter>
		<filter-name>AjaxAnywhere</filter-name>
		<filter-class>org.ajaxanywhere.AAFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>AjaxAnywhere</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	<!-- End AjaxAnywhere -->

</web-app>






