<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE form-validation PUBLIC
    "-//Apache Software Foundation//DTD Commons Validator Rules Configuration 1.0//EN"
    "http://jakarta.apache.org/commons/dtds/validator_1_0.dtd">
<!--  
    
    Javascript methods used for client-side validation, to supplement those in validator-rules.xml
    
    $Id$ 
    
    -->
<form-validation>
	<global>
		<validator name="lengthRange" classname="ubic.gemma.web.util.ValidationUtil" method="validateLengthRange"
			methodParams="java.lang.Object,
                       org.apache.commons.validator.ValidatorAction,
                       org.apache.commons.validator.Field,
                       org.springframework.validation.Errors"
			depends="required" msg="errors.lengthRange">

            <javascript>
                <![CDATA[
            function validateLengthRange(form) {
                var isValid = true;
                var focusField = null;
                var i = 0;
                var fields = new Array();
                
                oRange = new lengthRange();
                for (x in oRange) {
                    var field = form[oRange[x][0]];
                    
                    if ((field.type == 'text' ||
                         field.type == 'textarea') &&
                        (field.value.length > 0)) {
                        
                        var iMin = parseInt(oRange[x][2]("minLength"));
                        var iMax = parseInt(oRange[x][2]("maxLength"));
                    
                        if ( (trim(field.value).length < iMin) || (trim(field.value).length > iMax)) {
                            if (i == 0) {
                                focusField = field;
                            }
                            fields[i++] = oRange[x][1];
                            isValid = false;
                        }
                    }
                }
                if (fields.length > 0) {
                    focusField.focus();
                    alert(fields.join('\n'));
                }
                return isValid;
          }]]>
            </javascript>

		</validator>

        <validator name="positiveNonZeroInteger" classname="ubic.gemma.web.util.ValidationUtil" method="validatePositiveNonZeroInteger"
            methodParams="java.lang.Object,
                       org.apache.commons.validator.ValidatorAction,
                       org.apache.commons.validator.Field,
                       org.springframework.validation.Errors"
            depends="required" msg="errors.positiveNonZeroInteger" jsFunctionName="IntegerValidations">
            
            <javascript>
                <![CDATA[
             function validatePositiveNonZeroInteger(form) {
                var bValid = true;
                var focusField = null;
                var i = 0;
                var fields = new Array();
                oInteger = new IntegerValidations();
                for (x in oInteger) {
                	var field = form[oInteger[x][0]];

                    if (field.type == 'text' ||
                        field.type == 'textarea' ||
                        field.type == 'select-one' ||
                        field.type == 'radio') {
                        
                        var value = '';
						// get field's value
						if (field.type == "select-one") {
							var si = field.selectedIndex;
						    if (si >= 0) {
							    value = field.options[si].value;
						    }
						} else {
							value = field.value;
						}
                        
                        if (value.length > 0) {
                        
                            if (!isAllDigits(value)) {
                                bValid = false;
                                if (i == 0) {
	                                focusField = field;
	                            }
						        fields[i++] = oInteger[x][1];
						        
                            } else {
	                            var iValue = parseInt(value);
	                            if (isNaN(iValue) || !(iValue > 0 && iValue <= 2147483647)) {
	                                if (i == 0) {
	                                    focusField = field;
	                                }
	                                fields[i++] = oInteger[x][1];
	                                bValid = false;
	                           }
                           }
                       }
                    }
                }
                if (fields.length > 0) {
                   focusField.focus();
                   alert(fields.join('\n'));
                }
                return bValid;
            }
                    ]]>
            </javascript>
        </validator>

	</global>
</form-validation>

