<?xml version="1.0" encoding="UTF-8"?>
	<!--
		Somewhat miscellaneous beans. @author Gemma @version $Id: applicationContext-serviceBeans.xml,v 1.1.2.1 2009/11/11
		17:05:12 paul Exp $
	-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<!-- Configured here because autowiring doesn't work with static fields. -->
	<bean id="progressManager" class="ubic.gemma.util.progress.ProgressManager" lazy-init="true">
		<property name="userManager" ref="userManager" />
		<property name="jobInfoDao" ref="jobInfoDao" />
	</bean>

	<!-- Pointcut for monitoring methods. See ubic.gemma.util.monitor.MonitorAdvice and Monitored (annotations not working here) -->
	<aop:config>
		<aop:aspect id="monitorAspect" ref="monitorAdvice">
			<aop:around method="profile" pointcut="execution(@ubic.gemma.util.monitor.Monitored * *(..))" />
		</aop:aspect>
	</aop:config>



	<!--
		see
		http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/ch10s05.html#transaction-declarative-txadvice-settings
	-->
	<aop:config>
		<aop:pointcut id="serviceMethod" expression="ubic.gemma.util.SystemArchitectureAspect.serviceMethod()" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>



	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename">
			<value>messages</value>
		</property>
	</bean>


	<!--
		configurationPropertyConfigurer allows you to use variables like ${mail.host} in the spring bean definitions.
		Variables are listed in a resource. If the resource is in your classpath, list in in 'locations'. Other config files
		can be added by defining PropertiesConfiguration instances
	-->
	<bean id="userProperties" class="org.apache.commons.configuration.PropertiesConfiguration">
		<constructor-arg index="0">
			<value>Gemma.properties</value>
		</constructor-arg>
	</bean>


	<bean id="configurationPropertyConfigurer" class="ubic.gemma.util.CommonsConfigurationPropertyPlaceholderConfigurer">
		<property name="configuration">
			<ref local="userProperties" />
		</property>
		<property name="locations">
			<list>
				<value>classpath:default.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="false" />
		<property name="ignoreResourceNotFound" value="false" />
	</bean>



	<!-- ==================================================== -->
	<!--    Email configuration   -->
	<!-- ==================================================== -->
	<bean id="mailEngine" class="ubic.gemma.util.MailEngine">
		<property name="mailSender">
			<ref bean="mailSender" />
		</property>
		<property name="velocityEngine">
			<ref bean="velocityEngine" />
		</property>
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${mail.host}</value>
		</property>
		<property name="username">
			<value>${mail.username}</value>
		</property>
		<property name="password">
			<value>${mail.password}</value>
		</property>
	</bean>


	<!-- Configure Velocity for sending e-mail -->
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</prop>
			</props>
		</property>
	</bean>


</beans>
