<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC
    "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- 
	author: keshav   
	$Id$ 
-->

<!-- Root application context -->

<beans>
	<!-- Declaration of GigaSpaces factory bean -->
	<bean id="gigaspace" class="org.springmodules.javaspaces.gigaspaces.GigaSpacesFactoryBean">
		<property name="urls">
			<list>
				<!--  <value>jini://*/*/remotingSpace</value> -->
				<value>${gemma.spaces.url.0}</value>
			</list>
		</property>
	</bean>

	<!--  Declaration of GigaSpaces uid factory -->
	<bean id="gigaSpacesUidFactory"
		class="org.springmodules.javaspaces.gigaspaces.remote.support.GigaSpacesUidFactory">
		<property name="space" ref="gigaspace" />
	</bean>

	<!-- Declaration of GigaSpace template-->
	<bean id="gigaspacesTemplate" class="org.springmodules.javaspaces.gigaspaces.GigaSpacesTemplate">
		<property name="space" ref="gigaspace" />
	</bean>

	<bean id="expressionExperimentLoadWorker" class="ubic.gemma.grid.javaspaces.CustomDelegatingWorker"
		singleton="false">
		<property name="javaSpaceTemplate" ref="gigaspacesTemplate" />
		<property name="delegate">
			<ref local="taskBean" />
		</property>
		<property name="businessInterface">
			<value>ubic.gemma.grid.javaspaces.expression.experiment.ExpressionExperimentLoadTask</value>
		</property>
	</bean>
	
	<bean id="indexGemmaSpaceWorker" class="ubic.gemma.grid.javaspaces.CustomDelegatingWorker"
		singleton="false">
		<property name="javaSpaceTemplate" ref="gigaspacesTemplate" />
		<property name="delegate">
			<ref local="indexTask" />
		</property>
		<property name="businessInterface">
			<value>ubic.gemma.grid.javaspaces.index.IndexGemmaTask</value>
		</property>
	</bean>
	

	<bean id="expressionExperimentReportGenerationWorker" class="ubic.gemma.grid.javaspaces.CustomDelegatingWorker"
		singleton="false">
		<property name="javaSpaceTemplate" ref="gigaspacesTemplate" />
		<property name="delegate">
			<ref bean="expressionExperimentReportService" />
		</property>
		<property name="businessInterface">
			<value>ubic.gemma.grid.javaspaces.expression.experiment.ExpressionExperimentReportTask</value>
		</property>
	</bean>

	<bean id="javaSpaceInterceptor" class="org.springmodules.javaspaces.gigaspaces.GigaSpacesInterceptor">
		<property name="javaSpaceTemplate" ref="gigaspacesTemplate" />
		<property name="uidFactory" ref="gigaSpacesUidFactory" />
		<property name="synchronous">
			<value>true</value>
		</property>
		<!--
			The master will take the result from the space when it is available.  This
			sets the time the master will wait for a result before timing out.
			
			This has been set to an extremely large value to make the effects negligible.  
			That is, the master will never time out based on this setting.  Instead, the 
			master should terminate itself programmatically after receiving the result. 
		-->
		<property name="timeoutMillis">
			<value>600000000</value>
		</property>

		<!--
			Comment out this property for "service seeking" behavior 
			where the endpoint is assumed to host a service to invoke.
		-->
		<!--
			<property name="serializableTarget" ref="taskBean">
			</property>
		-->
	</bean>
	<!--
		This is the client-side proxy.
	-->
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames">
			<list>
				<value>javaSpaceInterceptor</value>
				<!--
					<value>PerformanceMonitorInterceptor</value>
				-->
			</list>
		</property>
		<property name="proxyInterfaces">
			<list>
				<value>ubic.gemma.grid.javaspaces.expression.experiment.ExpressionExperimentLoadTask</value>
				<value>ubic.gemma.grid.javaspaces.expression.experiment.ExpressionExperimentReportTask</value>
				<value>ubic.gemma.grid.javaspaces.index.IndexGemmaTask</value>
			</list>
		</property>
	</bean>

	<bean id="taskBean" class="ubic.gemma.grid.javaspaces.expression.experiment.ExpressionExperimentLoadTaskImpl">
	
		<property name="geoDatasetService">
			<ref bean="geoDatasetService" />
		</property>
		<property name="arrayExpressLoadService">
			<ref bean="arrayExpressLoadService" />
		</property>
		<property name="gigaSpacesTemplate">
			<ref bean="gigaspacesTemplate" />
		</property>
		
	</bean>
	
	<bean id="indexTask" class="ubic.gemma.grid.javaspaces.index.IndexGemmaTaskImpl">

		<property name="geneGps">
			<ref bean="geneGps" />
		</property>
		<property name="arrayGps">
			<ref bean="arrayGps" />
		</property>
		<property name="expressionGps">
			<ref bean="expressionGps" />
		</property>
		<property name="probeGps">
			<ref bean="probeGps" />
		</property>
		<property name="bibliographicGps">
			<ref bean="bibliographicGps" />
		</property>	
		<property name="bioSequenceGps">
			<ref bean="biosequenceGps" />
		</property>		
		<property name="gigaSpacesTemplate">
			<ref bean="gigaspacesTemplate" />
		</property>
		
		<property name="compassExpression">
			<ref bean="compassExpression"/>
		</property>		
		<property name="compassArray">
			<ref bean="compassArray"/>
		</property>
		<property name="compassProbe">
			<ref bean="compassProbe"/>
		</property>
		<property name="compassGene">
			<ref bean="compassGene"/>
		</property>
		<property name="compassBiosequence">
			<ref bean="compassBiosequence"/>
		</property>
		<property name="compassBibliographic">
			<ref bean="compassBibliographic"/>
		</property>
		
		
	</bean>
	
</beans>


