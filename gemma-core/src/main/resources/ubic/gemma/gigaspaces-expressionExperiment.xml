<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC
    "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- 
	author: keshav   
	$Id$ 
-->

<!-- Root application context -->

<beans>
	<!-- Declaration of GigaSpaces factory bean -->
	<bean id="gigaspace"
		class="org.springmodules.javaspaces.gigaspaces.GigaSpacesFactoryBean">
		<property name="urls">
			<list>
				<!--  <value>jini://*/*/remotingSpace</value> -->
				<value>rmi://localhost:10098/./remotingSpace</value>
			</list>
		</property>
	</bean>

	<!--  Declaration of GigaSpaces uid factory -->
	<bean id="gigaSpacesUidFactory"
		class="org.springmodules.javaspaces.gigaspaces.remote.support.GigaSpacesUidFactory">
		<property name="space" ref="gigaspace" />
	</bean>

	<!-- Declaration of GigaSpace template-->
	<bean id="gigaspacesTemplate"
		class="org.springmodules.javaspaces.gigaspaces.GigaSpacesTemplate">
		<property name="space" ref="gigaspace" />
	</bean>

	<bean id="testBeanWorker"
		class="org.springmodules.javaspaces.DelegatingWorker"
		singleton="false">
		<property name="javaSpaceTemplate" ref="gigaspacesTemplate" />
		<property name="delegate">
			<ref local="taskBean" />
		</property>
		<property name="businessInterface">
			<value>ubic.gemma.javaspaces.gigaspaces.ExpressionExperimentTask</value>
		</property>
	</bean>
	<bean id="javaSpaceInterceptor"
		class="org.springmodules.javaspaces.gigaspaces.GigaSpacesInterceptor">
		<property name="javaSpaceTemplate" ref="gigaspacesTemplate" />
		<property name="uidFactory" ref="gigaSpacesUidFactory" />
		<property name="synchronous">
			<value>true</value>
		</property>
		<!--
			The Time for waiting to take the result from the space by the master
		-->
		<property name="timeoutMillis">
			<value>60000000</value>
		</property>

		<!--
			Comment out this property for "service seeking" behavior 
			where the endpoint is assumed to host a service to invoke.
		-->
		<!--
			<property name="serializableTarget" ref="taskBean">
			</property>
		-->
	</bean>
	<!--
		This is the client-side proxy.
	-->
	<bean id="proxy"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="interceptorNames">
			<list>
				<value>javaSpaceInterceptor</value>
				<!--
					<value>PerformanceMonitorInterceptor</value>
				-->
			</list>
		</property>
		<property name="proxyInterfaces">
			<list>
				<value>
					ubic.gemma.javaspaces.gigaspaces.ExpressionExperimentTask
				</value>
			</list>
		</property>
	</bean>
	<!--
		Simple test target
	-->
	<bean id="taskBean"
		class="ubic.gemma.javaspaces.gigaspaces.ExpressionExperimentTaskImpl">
		<property name="expressionExperimentService">
			<ref bean="expressionExperimentService" />
		</property>
		<property name="geoDatasetService">
			<ref bean="geoDatasetService" />
		</property>
	</bean>
</beans>


