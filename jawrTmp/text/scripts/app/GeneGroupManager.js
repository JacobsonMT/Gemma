
Ext.namespace('Gemma');Gemma.GeneGroupManager=Ext.extend(Ext.Panel,{id:"gene-manager-panel",layout:'hbox',layoutConfig:{align:'stretch'},title:"Gene Group Manager",initComponent:function(){this.geneChooserPanel=new Gemma.GeneGroupMemberPanelClassic({split:true,flex:1});this.geneGroupPanel=new Gemma.GeneGroupPanel({tbar:new Gemma.GeneGroupEditToolbar(),flex:1,viewConfig:{forceFit:true}});Ext.apply(this.geneChooserPanel.getTopToolbar().taxonCombo,{stateId:"",stateful:false,stateEvents:[]});Ext.apply(this,{items:[this.geneGroupPanel,this.geneChooserPanel]});Gemma.GeneGroupManager.superclass.initComponent.call(this);this.geneChooserPanel.getStore().on('remove',function(store,record,index){this.dirtySet(store);},this);this.geneChooserPanel.getStore().on('add',function(store,records,index){this.dirtySet(store);this.geneChooserPanel.resetKeepTaxon();},this);this.geneChooserPanel.getStore().on('load',function(){this.getEl().unmask();},this);this.geneGroupPanel.getSelectionModel().on('rowselect',function(model,rowindex,record){this.getEl().mask();if(record.get('geneIds').length===0){this.geneChooserPanel.getStore().removeAll();this.geneChooserPanel.lockInTaxon(record.data.taxonId);this.getEl().unmask();}else{if(!record.phantom){this.geneChooserPanel.showGeneGroup(record);}else{this.geneChooserPanel.loadGenes(record.get('geneIds'));}}},this);},dirtySet:function(store){store.clearFilter(false);var currentIds=[];store.each(function(r){currentIds.push(r.get('id'));},this);var rec=this.geneGroupPanel.getSelectionModel().getSelected();if(rec){rec.set('geneIds',currentIds);rec.set('size',currentIds.length);}}});