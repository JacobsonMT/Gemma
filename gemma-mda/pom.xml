<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>gemma</groupId>
	<name>Gemma MDA</name>
	<description>
	<![CDATA[Model-driven architecture generated code and implementations.]]>
	</description>
	<artifactId>gemma-mda</artifactId>
	<version>1.5</version>
	<parent>
		<groupId>gemma</groupId>
		<artifactId>gemma</artifactId>
		<version>1.5</version>
	</parent>
	<packaging>jar</packaging>
	<dependencies>
		<dependency>
			<groupId>gemma</groupId>
			<artifactId>gemma-util</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>target/generated-sources/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>ehcache.xml</exclude>
					<exclude>hibernate.cfg.xml</exclude>
				</excludes>
			</resource>
		</resources>
		<filters>
			<filter>src/main/filters/project.properties</filter>
		</filters>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.andromda.maven.plugins</groupId>
				<artifactId>andromda-multi-source-plugin</artifactId>
				<version>3.3</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sourceDirectories>
								<directory>target/generated-sources/java</directory>
							</sourceDirectories>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.andromda.maven.plugins</groupId>
				<artifactId>andromda-maven-plugin</artifactId>
				<version>3.3</version>
				<executions>
					<execution>
						<configuration>
							<buildSourceDirectory>target/generated-sources</buildSourceDirectory>
							<configurationUri>file:${project.basedir}/src/main/conf/andromda.xml</configurationUri>
							<lastModifiedCheck>true</lastModifiedCheck>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile-datatype</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile-webservice</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile-service</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile-process</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile-meta</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile-xml</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile-persistence</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.profiles.uml14</groupId>
						<artifactId>andromda-profile-presentation</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
						<type>xml.zip</type>
					</dependency>
					<dependency>
						<groupId>org.andromda.cartridges</groupId>
						<artifactId>andromda-spring-cartridge</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>org.andromda.cartridges</groupId>
						<artifactId>andromda-hibernate-cartridge</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>org.andromda.cartridges</groupId>
						<artifactId>andromda-webservice-cartridge</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>org.andromda.cartridges</groupId>
						<artifactId>andromda-java-cartridge</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>org.andromda.cartridges</groupId>
						<artifactId>andromda-jsf-cartridge</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>org.andromda.translationlibraries</groupId>
						<artifactId>andromda-ocl-validation-library</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>org.andromda.translationlibraries</groupId>
						<artifactId>andromda-ocl-query-library</artifactId>
						<version>3.3</version>
						<scope>provided</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<tasks>
						<echo message="******* Building DDL file *******" />
						<taskdef name="schemaexport" classname="org.hibernate.tool.hbm2ddl.SchemaExportTask">
							<classpath>
								<path refid="maven.dependency.classpath" />
							</classpath>
						</taskdef>
						<mkdir dir="target/schema" />
						<schemaexport quiet="true" text="true" create="true" drop="false" delimiter=";" output="${project.build.directory}/schema/gemma-ddl.sql" properties="${basedir}/src/main/resources/hibernate.properties">
							<fileset dir="target/generated-sources/resources" includes="**/*.hbm.xml" />
						</schemaexport>
					</tasks>
				</configuration>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate</artifactId>
						<version>3.2.6.ga</version>
						<type>jar</type>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>andromda-snapshot</id>
			<name>AndroMDA</name>
			<url>http://galaxy.andromda.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>andromda-plugins</id>
			<name>AndroMDA</name>
			<url>http://galaxy.andromda.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>
	<profiles>
		<profile>
			<id>testdb.build</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>testdb.build</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<dependencies><!--  yes, this needs to be here. -->
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>5.1.10</version>
								<type>jar</type>
							</dependency>
						</dependencies>
						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<username>${gemma.db.build.user}</username>
							<password>${gemma.db.build.password}</password>
							<onError>continue</onError>
							<autocommit>true</autocommit>
						</configuration>
						<executions>
							<execution>
								<id>drop-add-testdb</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>${bootstrap.db.url}</url>
									<autocommit>false</autocommit>
									<sqlCommand>
									<![CDATA[drop database if exists ${gemma.testdb.name};
									create database ${gemma.testdb.name}]]>
									</sqlCommand>
								</configuration>
							</execution>
							<execution>
								<id>load-testdb-schema</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>${gemma.testdb.build.url}</url>
									<srcFiles>
										<srcFile>target/schema/gemma-ddl.sql</srcFile>
										<scrFile>src/main/resources/sql/init-indices.sql</scrFile>
										<srcFile>src/main/resources/sql/init-entities.sql</srcFile>
										<srcFile>src/main/resources/sql/init-acls.sql</srcFile>
									</srcFiles>
									<onError>abort</onError>
								</configuration>
							</execution>
							<execution>
								<id>install-triggers</id>
								<phase>test-compile</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>${gemma.testdb.build.url}</url>
									<delimiter>|</delimiter>
									<srcFiles>
										<srcFile>src/main/resources/sql/init-triggers.sql</srcFile>
									</srcFiles>
									<onError>abort</onError>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>andromda</id>
			<activation>
				<property>
					<name>andromda</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- todo when maven fixes bugs in properties/activation, put andromda here.-->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>db.build</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>db.build</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>3.1.11</version>
								<type>jar</type>
							</dependency>
						</dependencies>
						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<username>${gemma.db.build.user}</username>
							<password>${gemma.db.build.password}</password>
						</configuration>
						<executions>
							<execution>
								<id>drop-add-db</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>${bootstrap.db.url}</url>
									<autocommit>false</autocommit>
									<sqlCommand>
									<![CDATA[drop database if exists ${gemma.db.name};
									create database ${gemma.db.name}]]>
									</sqlCommand>
								</configuration>
							</execution>
							<execution>
								<id>load-db-schema</id>
								<phase>process-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>${gemma.db.build.url}</url>
									<autocommit>false</autocommit>
									<srcFiles>
										<srcFile>target/schema/gemma-ddl.sql</srcFile>
										<scrFile>src/main/resources/sql/init-indices.sql</scrFile>
										<srcFile>src/main/resources/sql/init-entities.sql</srcFile>
										<srcFile>src/main/resources/sql/init-acls.sql</srcFile>
									</srcFiles>
									<onError>abort</onError>
								</configuration>
							</execution>
							<execution>
								<id>install-triggers</id>
								<phase>compile</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<url>${gemma.db.build.url}</url>
									<delimiter>|</delimiter>
									<srcFiles>
										<srcFile>src/main/resources/sql/init-triggers.sql</srcFile>
									</srcFiles>
									<onError>abort</onError>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<properties>
		<andromda>true</andromda>
		<xdoclet>true</xdoclet>
	</properties>
</project>
