// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ValueObject.vsl in andromda-java-cartridge.
//
package ubic.gemma.model.expression.arrayDesign;

/**
 * <p>
 * Value object for quickly displaying varied information about
 * arrayDesigns.
 * </p>
 */
public class ArrayDesignValueObject
    implements java.io.Serializable
{
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -8259245319391937522L;

    public ArrayDesignValueObject()
    {
    }

    public ArrayDesignValueObject(java.lang.String name, java.lang.String shortName, java.lang.Long designElementCount, java.lang.String taxon, java.lang.Long expressionExperimentCount, java.lang.Boolean hasSequenceAssociations, java.lang.Boolean hasBlatAssociations, java.lang.Boolean hasGeneAssociations, java.lang.Long id, java.lang.String color, java.lang.String numProbeSequences, java.lang.String numProbeAlignments, java.lang.String numProbesToGenes, java.lang.String numProbesToProbeAlignedRegions, java.lang.String numProbesToPredictedGenes, java.lang.String numProbesToKnownGenes, java.lang.String numGenes, java.lang.String dateCached, java.util.Date lastSequenceUpdate, java.util.Date lastSequenceAnalysis, java.util.Date lastGeneMapping, java.lang.Boolean isSubsumed, java.lang.Boolean isSubsumer, java.lang.Boolean isMerged, java.lang.Boolean isMergee, java.util.Date lastRepeatMask, ubic.gemma.model.common.auditAndSecurity.AuditEvent troubleEvent, ubic.gemma.model.common.auditAndSecurity.AuditEvent validationEvent, java.util.Date dateCreated, java.lang.String description, ubic.gemma.model.expression.arrayDesign.TechnologyType technologyType)
    {
        this.name = name;
        this.shortName = shortName;
        this.designElementCount = designElementCount;
        this.taxon = taxon;
        this.expressionExperimentCount = expressionExperimentCount;
        this.hasSequenceAssociations = hasSequenceAssociations;
        this.hasBlatAssociations = hasBlatAssociations;
        this.hasGeneAssociations = hasGeneAssociations;
        this.id = id;
        this.color = color;
        this.numProbeSequences = numProbeSequences;
        this.numProbeAlignments = numProbeAlignments;
        this.numProbesToGenes = numProbesToGenes;
        this.numProbesToProbeAlignedRegions = numProbesToProbeAlignedRegions;
        this.numProbesToPredictedGenes = numProbesToPredictedGenes;
        this.numProbesToKnownGenes = numProbesToKnownGenes;
        this.numGenes = numGenes;
        this.dateCached = dateCached;
        this.lastSequenceUpdate = lastSequenceUpdate;
        this.lastSequenceAnalysis = lastSequenceAnalysis;
        this.lastGeneMapping = lastGeneMapping;
        this.isSubsumed = isSubsumed;
        this.isSubsumer = isSubsumer;
        this.isMerged = isMerged;
        this.isMergee = isMergee;
        this.lastRepeatMask = lastRepeatMask;
        this.troubleEvent = troubleEvent;
        this.validationEvent = validationEvent;
        this.dateCreated = dateCreated;
        this.description = description;
        this.technologyType = technologyType;
    }

    /**
     * Copies constructor from other ArrayDesignValueObject
     *
     * @param otherBean, cannot be <code>null</code>
     * @throws java.lang.NullPointerException if the argument is <code>null</code>
     */
    public ArrayDesignValueObject(ArrayDesignValueObject otherBean)
    {
        this(otherBean.getName(), otherBean.getShortName(), otherBean.getDesignElementCount(), otherBean.getTaxon(), otherBean.getExpressionExperimentCount(), otherBean.getHasSequenceAssociations(), otherBean.getHasBlatAssociations(), otherBean.getHasGeneAssociations(), otherBean.getId(), otherBean.getColor(), otherBean.getNumProbeSequences(), otherBean.getNumProbeAlignments(), otherBean.getNumProbesToGenes(), otherBean.getNumProbesToProbeAlignedRegions(), otherBean.getNumProbesToPredictedGenes(), otherBean.getNumProbesToKnownGenes(), otherBean.getNumGenes(), otherBean.getDateCached(), otherBean.getLastSequenceUpdate(), otherBean.getLastSequenceAnalysis(), otherBean.getLastGeneMapping(), otherBean.getIsSubsumed(), otherBean.getIsSubsumer(), otherBean.getIsMerged(), otherBean.getIsMergee(), otherBean.getLastRepeatMask(), otherBean.getTroubleEvent(), otherBean.getValidationEvent(), otherBean.getDateCreated(), otherBean.getDescription(), otherBean.getTechnologyType());
    }

    /**
     * Copies all properties from the argument value object into this value object.
     */
    public void copy(ArrayDesignValueObject otherBean)
    {
        if (otherBean != null)
        {
            this.setName(otherBean.getName());
            this.setShortName(otherBean.getShortName());
            this.setDesignElementCount(otherBean.getDesignElementCount());
            this.setTaxon(otherBean.getTaxon());
            this.setExpressionExperimentCount(otherBean.getExpressionExperimentCount());
            this.setHasSequenceAssociations(otherBean.getHasSequenceAssociations());
            this.setHasBlatAssociations(otherBean.getHasBlatAssociations());
            this.setHasGeneAssociations(otherBean.getHasGeneAssociations());
            this.setId(otherBean.getId());
            this.setColor(otherBean.getColor());
            this.setNumProbeSequences(otherBean.getNumProbeSequences());
            this.setNumProbeAlignments(otherBean.getNumProbeAlignments());
            this.setNumProbesToGenes(otherBean.getNumProbesToGenes());
            this.setNumProbesToProbeAlignedRegions(otherBean.getNumProbesToProbeAlignedRegions());
            this.setNumProbesToPredictedGenes(otherBean.getNumProbesToPredictedGenes());
            this.setNumProbesToKnownGenes(otherBean.getNumProbesToKnownGenes());
            this.setNumGenes(otherBean.getNumGenes());
            this.setDateCached(otherBean.getDateCached());
            this.setLastSequenceUpdate(otherBean.getLastSequenceUpdate());
            this.setLastSequenceAnalysis(otherBean.getLastSequenceAnalysis());
            this.setLastGeneMapping(otherBean.getLastGeneMapping());
            this.setIsSubsumed(otherBean.getIsSubsumed());
            this.setIsSubsumer(otherBean.getIsSubsumer());
            this.setIsMerged(otherBean.getIsMerged());
            this.setIsMergee(otherBean.getIsMergee());
            this.setLastRepeatMask(otherBean.getLastRepeatMask());
            this.setTroubleEvent(otherBean.getTroubleEvent());
            this.setValidationEvent(otherBean.getValidationEvent());
            this.setDateCreated(otherBean.getDateCreated());
            this.setDescription(otherBean.getDescription());
            this.setTechnologyType(otherBean.getTechnologyType());
        }
    }

    private java.lang.String name;

    /**
     * 
     */
    public java.lang.String getName()
    {
        return this.name;
    }

    public void setName(java.lang.String name)
    {
        this.name = name;
    }

    private java.lang.String shortName;

    /**
     * 
     */
    public java.lang.String getShortName()
    {
        return this.shortName;
    }

    public void setShortName(java.lang.String shortName)
    {
        this.shortName = shortName;
    }

    private java.lang.Long designElementCount;

    /**
     * 
     */
    public java.lang.Long getDesignElementCount()
    {
        return this.designElementCount;
    }

    public void setDesignElementCount(java.lang.Long designElementCount)
    {
        this.designElementCount = designElementCount;
    }

    private java.lang.String taxon;

    /**
     * 
     */
    public java.lang.String getTaxon()
    {
        return this.taxon;
    }

    public void setTaxon(java.lang.String taxon)
    {
        this.taxon = taxon;
    }

    private java.lang.Long expressionExperimentCount;

    /**
     * 
     */
    public java.lang.Long getExpressionExperimentCount()
    {
        return this.expressionExperimentCount;
    }

    public void setExpressionExperimentCount(java.lang.Long expressionExperimentCount)
    {
        this.expressionExperimentCount = expressionExperimentCount;
    }

    private java.lang.Boolean hasSequenceAssociations;

    /**
     * 
     */
    public java.lang.Boolean getHasSequenceAssociations()
    {
        return this.hasSequenceAssociations;
    }

    public void setHasSequenceAssociations(java.lang.Boolean hasSequenceAssociations)
    {
        this.hasSequenceAssociations = hasSequenceAssociations;
    }

    private java.lang.Boolean hasBlatAssociations;

    /**
     * 
     */
    public java.lang.Boolean getHasBlatAssociations()
    {
        return this.hasBlatAssociations;
    }

    public void setHasBlatAssociations(java.lang.Boolean hasBlatAssociations)
    {
        this.hasBlatAssociations = hasBlatAssociations;
    }

    private java.lang.Boolean hasGeneAssociations;

    /**
     * 
     */
    public java.lang.Boolean getHasGeneAssociations()
    {
        return this.hasGeneAssociations;
    }

    public void setHasGeneAssociations(java.lang.Boolean hasGeneAssociations)
    {
        this.hasGeneAssociations = hasGeneAssociations;
    }

    private java.lang.Long id;

    /**
     * 
     */
    public java.lang.Long getId()
    {
        return this.id;
    }

    public void setId(java.lang.Long id)
    {
        this.id = id;
    }

    private java.lang.String color;

    /**
     * 
     */
    public java.lang.String getColor()
    {
        return this.color;
    }

    public void setColor(java.lang.String color)
    {
        this.color = color;
    }

    private java.lang.String numProbeSequences;

    /**
     * <p>
     * The number of probes that map to bioSequences.
     * </p>
     */
    public java.lang.String getNumProbeSequences()
    {
        return this.numProbeSequences;
    }

    public void setNumProbeSequences(java.lang.String numProbeSequences)
    {
        this.numProbeSequences = numProbeSequences;
    }

    private java.lang.String numProbeAlignments;

    /**
     * <p>
     * The number of probes that have BLAT alignments.
     * </p>
     */
    public java.lang.String getNumProbeAlignments()
    {
        return this.numProbeAlignments;
    }

    public void setNumProbeAlignments(java.lang.String numProbeAlignments)
    {
        this.numProbeAlignments = numProbeAlignments;
    }

    private java.lang.String numProbesToGenes;

    /**
     * <p>
     * The number of probes that map to genes. This count includes
     * probe-aligned regions, predicted genes, and known genes.
     * </p>
     */
    public java.lang.String getNumProbesToGenes()
    {
        return this.numProbesToGenes;
    }

    public void setNumProbesToGenes(java.lang.String numProbesToGenes)
    {
        this.numProbesToGenes = numProbesToGenes;
    }

    private java.lang.String numProbesToProbeAlignedRegions;

    /**
     * <p>
     * The number of probes that map to probe-aligned regions.
     * </p>
     */
    public java.lang.String getNumProbesToProbeAlignedRegions()
    {
        return this.numProbesToProbeAlignedRegions;
    }

    public void setNumProbesToProbeAlignedRegions(java.lang.String numProbesToProbeAlignedRegions)
    {
        this.numProbesToProbeAlignedRegions = numProbesToProbeAlignedRegions;
    }

    private java.lang.String numProbesToPredictedGenes;

    /**
     * <p>
     * The number of probes that map to predicted genes.
     * </p>
     */
    public java.lang.String getNumProbesToPredictedGenes()
    {
        return this.numProbesToPredictedGenes;
    }

    public void setNumProbesToPredictedGenes(java.lang.String numProbesToPredictedGenes)
    {
        this.numProbesToPredictedGenes = numProbesToPredictedGenes;
    }

    private java.lang.String numProbesToKnownGenes;

    /**
     * <p>
     * The number of probes that map to known genes.
     * </p>
     */
    public java.lang.String getNumProbesToKnownGenes()
    {
        return this.numProbesToKnownGenes;
    }

    public void setNumProbesToKnownGenes(java.lang.String numProbesToKnownGenes)
    {
        this.numProbesToKnownGenes = numProbesToKnownGenes;
    }

    private java.lang.String numGenes;

    /**
     * <p>
     * The number of unique genes that this array design maps to.
     * </p>
     */
    public java.lang.String getNumGenes()
    {
        return this.numGenes;
    }

    public void setNumGenes(java.lang.String numGenes)
    {
        this.numGenes = numGenes;
    }

    private java.lang.String dateCached;

    /**
     * 
     */
    public java.lang.String getDateCached()
    {
        return this.dateCached;
    }

    public void setDateCached(java.lang.String dateCached)
    {
        this.dateCached = dateCached;
    }

    private java.util.Date lastSequenceUpdate;

    /**
     * 
     */
    public java.util.Date getLastSequenceUpdate()
    {
        return this.lastSequenceUpdate;
    }

    public void setLastSequenceUpdate(java.util.Date lastSequenceUpdate)
    {
        this.lastSequenceUpdate = lastSequenceUpdate;
    }

    private java.util.Date lastSequenceAnalysis;

    /**
     * 
     */
    public java.util.Date getLastSequenceAnalysis()
    {
        return this.lastSequenceAnalysis;
    }

    public void setLastSequenceAnalysis(java.util.Date lastSequenceAnalysis)
    {
        this.lastSequenceAnalysis = lastSequenceAnalysis;
    }

    private java.util.Date lastGeneMapping;

    /**
     * 
     */
    public java.util.Date getLastGeneMapping()
    {
        return this.lastGeneMapping;
    }

    public void setLastGeneMapping(java.util.Date lastGeneMapping)
    {
        this.lastGeneMapping = lastGeneMapping;
    }

    private java.lang.Boolean isSubsumed;

    /**
     * <p>
     * Indicate if this array design is subsumed by some other array
     * design.
     * </p>
     */
    public java.lang.Boolean getIsSubsumed()
    {
        return this.isSubsumed;
    }

    public void setIsSubsumed(java.lang.Boolean isSubsumed)
    {
        this.isSubsumed = isSubsumed;
    }

    private java.lang.Boolean isSubsumer;

    /**
     * <p>
     * Indicates if this array design subsumes some other array
     * design(s)
     * </p>
     */
    public java.lang.Boolean getIsSubsumer()
    {
        return this.isSubsumer;
    }

    public void setIsSubsumer(java.lang.Boolean isSubsumer)
    {
        this.isSubsumer = isSubsumer;
    }

    private java.lang.Boolean isMerged;

    /**
     * <p>
     * Indicates this array design is the merger of other array
     * designs.
     * </p>
     */
    public java.lang.Boolean getIsMerged()
    {
        return this.isMerged;
    }

    public void setIsMerged(java.lang.Boolean isMerged)
    {
        this.isMerged = isMerged;
    }

    private java.lang.Boolean isMergee;

    /**
     * <p>
     * Indicates that this array design has been merged into another.
     * </p>
     */
    public java.lang.Boolean getIsMergee()
    {
        return this.isMergee;
    }

    public void setIsMergee(java.lang.Boolean isMergee)
    {
        this.isMergee = isMergee;
    }

    private java.util.Date lastRepeatMask;

    /**
     * 
     */
    public java.util.Date getLastRepeatMask()
    {
        return this.lastRepeatMask;
    }

    public void setLastRepeatMask(java.util.Date lastRepeatMask)
    {
        this.lastRepeatMask = lastRepeatMask;
    }

    private ubic.gemma.model.common.auditAndSecurity.AuditEvent troubleEvent;

    /**
     * <p>
     * The last uncleared TroubleEvent associated with this
     * ArrayDesign.
     * </p>
     */
    public ubic.gemma.model.common.auditAndSecurity.AuditEvent getTroubleEvent()
    {
        return this.troubleEvent;
    }

    public void setTroubleEvent(ubic.gemma.model.common.auditAndSecurity.AuditEvent troubleEvent)
    {
        this.troubleEvent = troubleEvent;
    }

    private ubic.gemma.model.common.auditAndSecurity.AuditEvent validationEvent;

    /**
     * <p>
     * The last uncleared TroubleEvent associated with this
     * ArrayDesign.
     * </p>
     */
    public ubic.gemma.model.common.auditAndSecurity.AuditEvent getValidationEvent()
    {
        return this.validationEvent;
    }

    public void setValidationEvent(ubic.gemma.model.common.auditAndSecurity.AuditEvent validationEvent)
    {
        this.validationEvent = validationEvent;
    }

    private java.util.Date dateCreated;

    /**
     * <p>
     * The date the Array Design was created
     * </p>
     */
    public java.util.Date getDateCreated()
    {
        return this.dateCreated;
    }

    public void setDateCreated(java.util.Date dateCreated)
    {
        this.dateCreated = dateCreated;
    }

    private java.lang.String description;

    /**
     * 
     */
    public java.lang.String getDescription()
    {
        return this.description;
    }

    public void setDescription(java.lang.String description)
    {
        this.description = description;
    }

    private ubic.gemma.model.expression.arrayDesign.TechnologyType technologyType;

    /**
     * 
     */
    public ubic.gemma.model.expression.arrayDesign.TechnologyType getTechnologyType()
    {
        return this.technologyType;
    }

    public void setTechnologyType(ubic.gemma.model.expression.arrayDesign.TechnologyType technologyType)
    {
        this.technologyType = technologyType;
    }

    // ubic.gemma.model.expression.arrayDesign.ArrayDesignValueObject value-object java merge-point
}