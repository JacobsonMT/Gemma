/*
 * The Gemma project.
 * 
 * Copyright (c) 2006-2007 University of British Columbia
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringDao.vsl in andromda-spring-cartridge.
//
package ubic.gemma.model.common;

import java.util.Map;

import ubic.gemma.model.common.auditAndSecurity.AuditEvent;
import ubic.gemma.model.common.auditAndSecurity.eventType.AuditEventType;

/**
 * @see ubic.gemma.model.common.Auditable
 */
public interface AuditableDao<T extends Auditable> {
    /**
     * 
     */
    public java.util.Collection<AuditEvent> getAuditEvents( ubic.gemma.model.common.Auditable auditable );

    /**
     * <p>
     * Return a map of Auditables to AuditEvents for the given AuditEventType
     * </p>
     */
    public java.util.Map<Auditable, AuditEvent> getLastAuditEvent(
            java.util.Collection<? extends Auditable> auditables,
            ubic.gemma.model.common.auditAndSecurity.eventType.AuditEventType type );

    /**
     * <p>
     * Returns the most recent AuditEvent of the specified type.
     * </p>
     */
    public ubic.gemma.model.common.auditAndSecurity.AuditEvent getLastAuditEvent(
            ubic.gemma.model.common.Auditable auditable,
            ubic.gemma.model.common.auditAndSecurity.eventType.AuditEventType type );

    /**
     * <p>
     * Get all of the most recent AuditEvents for the given auditables, where the events have types. Return value is a
     * map of AuditEventType.classes -> Auditable -> AuditEven
     * </p>
     */
    public java.util.Map<Class<? extends AuditEventType>, Map<Auditable, AuditEvent>> getLastTypedAuditEvents(
            java.util.Collection<? extends Auditable> auditables );

}
