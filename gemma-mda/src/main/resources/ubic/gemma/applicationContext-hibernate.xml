<?xml version="1.0" encoding="UTF-8"?>
	<!--
		<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd"> Added by Luke
		McCarthy to allow certain methods to use a read-only database (i.e.: the slave database in the case of replication)
		$Id$
	-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">


	<!-- ========================= BASIC DEFINITIONS ========================= -->
	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename">
			<value>messages</value>
		</property>
	</bean>
	<!-- applicationContext merge-point -->
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="mappingLocations">
			<list>
				<!-- applicationContext hibernateMappingLocations merge-point -->
				<value>classpath:ubic/gemma/model/genome/sequenceAnalysis/SequenceSimilaritySearchResult.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/biosequence/BioSequence.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/gene/GeneAlias.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/gene/CandidateGene.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/gene/MappingCandidateGene.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/gene/BibReferenceCandidateGene.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/gene/CandidateGeneList.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/CytogeneticLocation.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/GeneticLocation.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/PhysicalLocation.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/ChromosomeFeature.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/Qtl.hbm.xml</value>
				<value>classpath:ubic/gemma/model/genome/Chromosome.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/genome/Taxon.hbm.xml</value>
				<value>classpath:ubic/gemma/model/common/description/DatabaseEntry.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/ExternalDatabase.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/LocalFile.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/FileFormat.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/BibliographicReference.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/Characteristic.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/NotedReference.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/NotedReferenceList.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/BibRefAnnotation.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/description/PublicationType.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/auditAndSecurity/UserGroup.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/auditAndSecurity/Contact.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/auditAndSecurity/AuditEvent.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/auditAndSecurity/AuditTrail.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/auditAndSecurity/UserRole.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/auditAndSecurity/UserQuery.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/auditAndSecurity/JobInfo.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/auditAndSecurity/eventType/AuditEventType.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/measurement/Measurement.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/measurement/Unit.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/Parameterizable.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/Parameter.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/ParameterizableApplication.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/ParameterValue.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/ProtocolApplication.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/Protocol.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/Software.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/Hardware.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/SoftwareApplication.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/protocol/HardwareApplication.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/common/quantitationtype/QuantitationType.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/experiment/FactorValue.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/experiment/ExperimentalDesign.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/experiment/ExperimentalFactor.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/designElement/DesignElement.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/arrayDesign/ArrayDesign.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/arrayDesign/AlternateName.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/bioAssay/BioAssay.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/bioAssayData/BioAssayDataVector.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/bioAssayData/RawExpressionDataVector.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/bioAssayData/ProcessedExpressionDataVector.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/bioAssayData/BioAssayDimension.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/bioAssayData/DesignElementDimension.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/biomaterial/BioMaterial.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/biomaterial/Treatment.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/biomaterial/Compound.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/biomaterial/CompoundMeasurement.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/expression/biomaterial/BioMaterialMeasurement.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/Gene2GOAssociation.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/BioSequence2GeneProduct.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/coexpression/MouseProbeCoExpression.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/coexpression/HumanProbeCoExpression.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/coexpression/RatProbeCoExpression.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/coexpression/OtherProbeCoExpression.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/coexpression/MouseGeneCoExpression.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/coexpression/HumanGeneCoExpression.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/coexpression/RatGeneCoExpression.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/coexpression/OtherGeneCoExpression.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/GeneHomology.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/LiteratureAssociation.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/association/ProteinProteinInteraction.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/analysis/Analysis.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/analysis/AnalysisResult.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/analysis/Investigation.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/analysis/AnalysisResultSet.hbm.xml
				</value>
				<value>classpath:ubic/gemma/model/analysis/expression/ExpressionExperimentSet.hbm.xml
				</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.max_fetch_depth">3</prop>
				<prop key="hibernate.jdbc.fetch_size">500</prop>
				<prop key="hibernate.default_batch_fetch_size">500</prop>
				<prop key="hibernate.jdbc.batch_size">500</prop>
				<prop key="hibernate.use_streams_for_binary">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.query_cache_factory">org.hibernate.cache.StandardQueryCacheFactory</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<!-- <prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.use_sql_comments">true</prop>-->
			</props>
		</property>
	</bean>
	<!-- The Hibernate interceptor -->
	<bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- ======= TRANSACTIONS ======= -->

	<!-- Service Transactional Interceptor -->
	<bean id="serviceTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributeSource">
			<value>
				ubic.gemma.model.genome.sequenceAnalysis.BlatResultService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlatResultService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.sequenceAnalysis.BlatResultService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlatResultService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlatResultService.findByBioSequence=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.sequenceAnalysis.BlatResultService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.sequenceAnalysis.BlatResultService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlatAssociationService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlatAssociationService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.sequenceAnalysis.BlatAssociationService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.sequenceAnalysis.BlatAssociationService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlastResultService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlastResultService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlastResultService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.sequenceAnalysis.BlastResultService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.sequenceAnalysis.BlastAssociationService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.biosequence.BioSequenceService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.biosequence.BioSequenceService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.biosequence.BioSequenceService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.biosequence.BioSequenceService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.biosequence.BioSequenceService.getGenesByName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.getGenesByAccession=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.findByName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.findByAccession=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.loadMultiple=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.thawLite=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.biosequence.BioSequenceService.findByGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.CandidateGeneListService.createByName=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.CandidateGeneListService.updateCandidateGeneList=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.CandidateGeneListService.removeCandidateGeneList=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.CandidateGeneListService.findByContributer=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.CandidateGeneListService.findByGeneOfficialName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.CandidateGeneListService.findByID=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.CandidateGeneListService.findByListOwner=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.CandidateGeneListService.setActor=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.CandidateGeneListService.saveCandidateGeneList=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.CandidateGeneListService.findAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.GeneService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.GeneService.findByOfficialName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.findAllQtlsByPhysicalMapLocation=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.findByOfficialSymbol=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.findByOfficialSymbolInexact=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.GeneService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.findNearest=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.GeneService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.findByAlias=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.getCoexpressedGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.getGenesByTaxon=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.loadMultiple=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.getMicroRnaByTaxon=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.getCompositeSequences=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.getCompositeSequenceCountById=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.getCompositeSequencesById=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.getMultipleCoexpressionResults=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.loadProbeAlignedRegions=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.loadKnownGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.loadPredictedGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.getCoexpressedKnownGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.thawLite=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.findByAccession=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneService.findByNCBIId=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneProductService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.GeneProductService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.GeneProductService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.GeneProductService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.gene.GeneProductService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneProductService.getGenesByName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneProductService.getGenesByNcbiId=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneProductService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneProductService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.gene.GeneProductService.loadMultiple=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.TaxonService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.TaxonService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.TaxonService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.TaxonService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.TaxonService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.TaxonService.findByScientificName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.TaxonService.findByCommonName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.TaxonService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.ChromosomeService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.ChromosomeService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.genome.ProbeAlignedRegionService.findAssociations=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.genome.PhysicalLocationService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.BibliographicReferenceService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.BibliographicReferenceService.findByExternalId=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.BibliographicReferenceService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.BibliographicReferenceService.findByTitle=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.BibliographicReferenceService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.BibliographicReferenceService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.BibliographicReferenceService.addPDF=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.BibliographicReferenceService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.BibliographicReferenceService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.BibliographicReferenceService.getRelatedExperiments=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.BibliographicReferenceService.getAllExperimentLinkedReferences=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.BibliographicReferenceService.loadMultiple=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.ExternalDatabaseService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.ExternalDatabaseService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.ExternalDatabaseService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.ExternalDatabaseService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.NotedReferenceListService.createNewList=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.NotedReferenceListService.addReferenceToList=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.NotedReferenceListService.getAllReferencesForList=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.NotedReferenceListService.setListDescription=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.NotedReferenceListService.setComment=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.NotedReferenceListService.removeList=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.NotedReferenceListService.removeReferenceFromList=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.NotedReferenceListService.setRating=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.FileFormatService.findByIdentifier=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.LocalFileService.deleteFile=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.LocalFileService.copyFile=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.LocalFileService.findByPath=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.LocalFileService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.LocalFileService.save=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.LocalFileService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.LocalFileService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.DatabaseEntryService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.DatabaseEntryService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.DatabaseEntryService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.DatabaseEntryService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.CharacteristicService.findByValue=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.CharacteristicService.findByParentClass=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.CharacteristicService.getParent=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.CharacteristicService.getParents=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.CharacteristicService.findByUri=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.CharacteristicService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.description.CharacteristicService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.CharacteristicService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.description.CharacteristicService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.PersonService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.PersonService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.PersonService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.PersonService.findByFullName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.PersonService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserService.addRole=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserService.findByUserName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserService.findByEmail=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserService.loadAllRoles=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserQueryService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserQueryService.removeAllForUser=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserQueryService.removeOldForUser=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserQueryService.findByUser=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserQueryService.findMostRecentForUser=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserQueryService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserQueryService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserQueryService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.ContactService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.ContactService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.ContactService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.ContactService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.audit=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.addUpdateEvent=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.addComment=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.addTroubleFlag=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.addOkFlag=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.addValidatedFlag=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.getLastTroubleEvent=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.AuditTrailService.getLastValidationEvent=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.UserGroupService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.UserGroupService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.auditAndSecurity.AuditEventService.getUpdatedSinceDate=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.AuditEventService.getNewSinceDate=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.auditAndSecurity.AuditEventService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.measurement.MeasurementService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.HardwareService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.protocol.HardwareService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.HardwareService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.HardwareService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.ProtocolService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.protocol.ProtocolService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.ProtocolService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.ProtocolService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.SoftwareService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.SoftwareService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.protocol.SoftwareService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.protocol.SoftwareService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.quantitationtype.QuantitationTypeService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.quantitationtype.QuantitationTypeService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.common.quantitationtype.QuantitationTypeService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.common.quantitationtype.QuantitationTypeService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.common.quantitationtype.QuantitationTypeService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.common.quantitationtype.QuantitationTypeService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.quantitationtype.QuantitationTypeService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.AuditableService.getEvents=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.AuditableService.getLastAuditEvent=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.common.AuditableService.getLastTypedAuditEvents=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByInvestigator=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByAccession=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getArrayDesignsUsed=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getQuantitationTypeCountById=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByShortName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getTaxon=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getSamplingOfVectors=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getQuantitationTypes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getPerTaxonCount=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.loadAllValueObjects=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.loadValueObjects=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByTaxon=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.thawLite=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getDesignElementDataVectorCountById=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getProcessedExpressionVectorCount=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getBioMaterialCount=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.loadMultiple=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getDesignElementDataVectors=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getLastLinkAnalysis=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getLastProcessedDataUpdate=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getLastMissingValueAnalysis=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByGene=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByExpressedGene=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByBibliographicReference=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getPreferredQuantitationType=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getLastArrayDesignUpdate=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getLastTroubleEvent=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getLastValidationEvent=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getAssayedGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getAssayedProbes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByBioMaterial=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByFactorValue=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getAnnotationCounts=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getPopulatedFactorCounts=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getSampleRemovalEvents=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.getSubSets=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByBioMaterials=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByFactorValues=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentService.findByQuantitationType=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalDesignService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalDesignService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExperimentalDesignService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExperimentalDesignService.findByName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalDesignService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExperimentalDesignService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalDesignService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalDesignService.getExpressionExperiment=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalFactorService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalFactorService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExperimentalFactorService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExperimentalFactorService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalFactorService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExperimentalFactorService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExperimentalFactorService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.FactorValueService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.FactorValueService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.FactorValueService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.FactorValueService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.FactorValueService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.FactorValueService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExpressionExperimentSubSetService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.experiment.ExpressionExperimentSubSetService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.experiment.ExpressionExperimentSubSetService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.designElement.CompositeSequenceService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.designElement.CompositeSequenceService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.designElement.CompositeSequenceService.findByName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.designElement.CompositeSequenceService.findByNamesInArrayDesigns=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.loadMultiple=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.getRawSummary=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.findByBioSequenceName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.findByBioSequence=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.findByGene=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.getGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.CompositeSequenceService.getGenesWithSpecificity=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.ReporterService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.designElement.ReporterService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.designElement.ReporterService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.designElement.ReporterService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.findByName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getCompositeSequenceCount=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getReporterCount=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.loadCompositeSequences=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getTaxon=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getAllAssociatedBioAssays=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.findByShortName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numBioSequences=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numBlatResults=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getExpressionExperiments=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numCompositeSequenceWithBioSequences=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numCompositeSequenceWithBlatResults=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numCompositeSequenceWithGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.deleteGeneProductAssociations=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.deleteAlignmentData=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.loadValueObjects=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.loadAllValueObjects=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numAllCompositeSequenceWithBioSequences=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numAllCompositeSequenceWithBlatResults=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numAllCompositeSequenceWithGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numAllGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.compositeSequenceWithoutBioSequences=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.compositeSequenceWithoutBlatResults=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.compositeSequenceWithoutGenes=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numCompositeSequenceWithProbeAlignedRegion=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.numCompositeSequenceWithPredictedGenes=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getLastSequenceAnalysis=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getLastGeneMapping=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getLastAnnotationFile=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getLastSequenceUpdate=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.updateSubsumingStatus=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.isSubsumer=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.isSubsumed=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.loadFully=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.thawLite=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.isMergee=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.isMerged=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getLastRepeatAnalysis=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.removeBiologicalCharacteristics=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getLastTroubleEvent=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.getLastValidationEvent=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.loadMultiple=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.arrayDesign.ArrayDesignService.findByAlternateName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssay.BioAssayService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssay.BioAssayService.getAllBioAssays=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssay.BioAssayService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssay.BioAssayService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssay.BioAssayService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssay.BioAssayService.findBioAssayDimensions=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssay.BioAssayService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssay.BioAssayService.addBioMaterialAssociation=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssay.BioAssayService.removeBioMaterialAssociation=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssay.BioAssayService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssay.BioAssayService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.BioAssayDataVectorService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.BioAssayDataVectorService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.removeDataForCompositeSequence=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.removeDataForQuantitationType=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.getPreferredVectors=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.ProcessedExpressionDataVectorService.getProcessedDataArrays=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.ProcessedExpressionDataVectorService.getProcessedDataVectors=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.ProcessedExpressionDataVectorService.createProcessedDataVectors=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.BioAssayDimensionService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.BioAssayDimensionService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.BioAssayDimensionService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.BioAssayDimensionService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.bioAssayData.BioAssayDimensionService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.bioAssayData.DesignElementDimensionService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.BioMaterialService.getBioMaterials=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.biomaterial.BioMaterialService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.BioMaterialService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.BioMaterialService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.biomaterial.BioMaterialService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.biomaterial.BioMaterialService.countAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.biomaterial.BioMaterialService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.BioMaterialService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.BioMaterialService.copy=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.BioMaterialService.loadMultiple=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.biomaterial.TreatmentService.getTreatments=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.biomaterial.TreatmentService.saveTreatment=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.CompoundService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.expression.biomaterial.CompoundService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.CompoundService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.expression.biomaterial.CompoundService.remove=PROPAGATION_REQUIRED
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.getVectorsForLinks=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.deleteLinks=PROPAGATION_REQUIRED
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.countLinks=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.prepareForShuffling=PROPAGATION_REQUIRED
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.getProbeCoExpression=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.getExpressionExperimentsLinkTestedIn=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.getGenesTestedBy=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.getExpressionExperimentsTestedIn=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService.validateProbesInCoexpression=PROPAGATION_REQUIRED,readOnly				
				ubic.gemma.model.association.coexpression.Gene2GeneCoexpressionService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.association.coexpression.Gene2GeneCoexpressionService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.association.coexpression.Gene2GeneCoexpressionService.findCoexpressionRelationships=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.coexpression.Gene2GeneCoexpressionService.findInterCoexpressionRelationship=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.Gene2GOAssociationService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.Gene2GOAssociationService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.association.Gene2GOAssociationService.findOrCreate=PROPAGATION_REQUIRED
				ubic.gemma.model.association.Gene2GOAssociationService.findByGene=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.Gene2GOAssociationService.findByGOTerm=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.Gene2GOAssociationService.findAssociationByGene=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.association.Gene2GOAssociationService.removeAll=PROPAGATION_REQUIRED
				ubic.gemma.model.association.BioSequence2GeneProductService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.AnalysisService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.AnalysisService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.AnalysisService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.AnalysisService.findByInvestigation=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.AnalysisService.findByInvestigations=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.AnalysisService.findByUniqueInvestigations=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.AnalysisService.findByName=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.AnalysisService.findByTaxon=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisService.getNumDatasetsAnalyzed=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisService.getDatasetsAnalyzed=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.coexpression.ProbeCoexpressionAnalysisService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisResultService.getExperimentalFactors=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisResultService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisResultService.thawAnalysisResult=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService.thaw=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService.findExperimentsWithAnalyses=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService.find=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService.getResultSets=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService.findByInvestigationIds=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService.findResultsForGeneInExperiments=PROPAGATION_REQUIRED,readOnly				
				ubic.gemma.model.analysis.expression.ExpressionExperimentSetService.create=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.expression.ExpressionExperimentSetService.delete=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.expression.ExpressionExperimentSetService.update=PROPAGATION_REQUIRED
				ubic.gemma.model.analysis.expression.ExpressionExperimentSetService.loadAll=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.ExpressionExperimentSetService.loadUserSets=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.ExpressionExperimentSetService.load=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.ExpressionExperimentSetService.getAnalyses=PROPAGATION_REQUIRED,readOnly
				ubic.gemma.model.analysis.expression.ExpressionExperimentSetService.findByName=PROPAGATION_REQUIRED,readOnly
			</value>
		</property>
	</bean>

	<!-- ======= DAOS =======  -->
	<!-- BlatResult Entity Proxy with inner BlatResult Entity implementation -->
	<bean id="blatResultDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.BlatResultDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.BlatResultDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BlastResult Entity Proxy with inner BlastResult Entity implementation -->
	<bean id="blastResultDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.BlastResultDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.BlastResultDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- SequenceSimilaritySearchResult Entity Proxy with inner SequenceSimilaritySearchResult Entity implementation -->
	<bean id="sequenceSimilaritySearchResultDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.SequenceSimilaritySearchResultDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.SequenceSimilaritySearchResultDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BlatAssociation Entity Proxy with inner BlatAssociation Entity implementation -->
	<bean id="blatAssociationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.BlatAssociationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.BlatAssociationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BlastAssociation Entity Proxy with inner BlastAssociation Entity implementation -->
	<bean id="blastAssociationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.BlastAssociationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.BlastAssociationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioSequence Entity Proxy with inner BioSequence Entity implementation -->
	<bean id="bioSequenceDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.biosequence.BioSequenceDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.biosequence.BioSequenceDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneAlias Entity Proxy with inner GeneAlias Entity implementation -->
	<bean id="geneAliasDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.GeneAliasDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.GeneAliasDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CandidateGene Entity Proxy with inner CandidateGene Entity implementation -->
	<bean id="candidateGeneDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.CandidateGeneDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.CandidateGeneDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneProduct Entity Proxy with inner GeneProduct Entity implementation -->
	<bean id="geneProductDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.GeneProductDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.GeneProductDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- MappingCandidateGene Entity Proxy with inner MappingCandidateGene Entity implementation -->
	<bean id="mappingCandidateGeneDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.MappingCandidateGeneDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.MappingCandidateGeneDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BibReferenceCandidateGene Entity Proxy with inner BibReferenceCandidateGene Entity implementation -->
	<bean id="bibReferenceCandidateGeneDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.BibReferenceCandidateGeneDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.BibReferenceCandidateGeneDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneInvestigation Entity Proxy with inner GeneInvestigation Entity implementation -->
	<bean id="geneInvestigationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.GeneInvestigationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.GeneInvestigationDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CandidateGeneList Entity Proxy with inner CandidateGeneList Entity implementation -->
	<bean id="candidateGeneListDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.CandidateGeneListDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
				<property name="candidateGeneDao">
					<ref bean="candidateGeneDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.CandidateGeneListDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CytogeneticLocation Entity Proxy with inner CytogeneticLocation Entity implementation -->
	<bean id="cytogeneticLocationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.CytogeneticLocationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.CytogeneticLocationDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ChromosomeLocation Entity Proxy with inner ChromosomeLocation Entity implementation -->
	<bean id="chromosomeLocationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.ChromosomeLocationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.ChromosomeLocationDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneticLocation Entity Proxy with inner GeneticLocation Entity implementation -->
	<bean id="geneticLocationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.GeneticLocationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.GeneticLocationDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- PhysicalLocation Entity Proxy with inner PhysicalLocation Entity implementation -->
	<bean id="physicalLocationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.PhysicalLocationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.PhysicalLocationDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ChromosomeFeature Entity Proxy with inner ChromosomeFeature Entity implementation -->
	<bean id="chromosomeFeatureDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.ChromosomeFeatureDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.ChromosomeFeatureDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Qtl Entity Proxy with inner Qtl Entity implementation -->
	<bean id="qtlDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.QtlDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.QtlDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- PhysicalMarker Entity Proxy with inner PhysicalMarker Entity implementation -->
	<bean id="physicalMarkerDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.PhysicalMarkerDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.PhysicalMarkerDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Chromosome Entity Proxy with inner Chromosome Entity implementation -->
	<bean id="chromosomeDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.ChromosomeDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.ChromosomeDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExpressionQtl Entity Proxy with inner ExpressionQtl Entity implementation -->
	<bean id="expressionQtlDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.ExpressionQtlDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.ExpressionQtlDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BehavioralQtl Entity Proxy with inner BehavioralQtl Entity implementation -->
	<bean id="behavioralQtlDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.BehavioralQtlDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.BehavioralQtlDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Taxon Entity Proxy with inner Taxon Entity implementation -->
	<bean id="taxonDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.TaxonDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.TaxonDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Gene Entity Proxy with inner Gene Entity implementation -->
	<bean id="geneDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.GeneDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.GeneDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- PredictedGene Entity Proxy with inner PredictedGene Entity implementation -->
	<bean id="predictedGeneDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.PredictedGeneDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.PredictedGeneDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ProbeAlignedRegion Entity Proxy with inner ProbeAlignedRegion Entity implementation -->
	<bean id="probeAlignedRegionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.ProbeAlignedRegionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.ProbeAlignedRegionDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>

	<!-- DatabaseEntry Entity Proxy with inner DatabaseEntry Entity implementation -->
	<bean id="databaseEntryDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.DatabaseEntryDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.DatabaseEntryDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExternalDatabase Entity Proxy with inner ExternalDatabase Entity implementation -->
	<bean id="externalDatabaseDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.ExternalDatabaseDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.ExternalDatabaseDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- LocalFile Entity Proxy with inner LocalFile Entity implementation -->
	<bean id="localFileDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.LocalFileDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.LocalFileDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- FileFormat Entity Proxy with inner FileFormat Entity implementation -->
	<bean id="fileFormatDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.FileFormatDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.FileFormatDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BibliographicReference Entity Proxy with inner BibliographicReference Entity implementation -->
	<bean id="bibliographicReferenceDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.BibliographicReferenceDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.BibliographicReferenceDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Characteristic Entity Proxy with inner Characteristic Entity implementation -->
	<bean id="characteristicDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.CharacteristicDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.CharacteristicDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- NotedReference Entity Proxy with inner NotedReference Entity implementation -->
	<bean id="notedReferenceDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.NotedReferenceDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.NotedReferenceDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- NotedReferenceList Entity Proxy with inner NotedReferenceList Entity implementation -->
	<bean id="notedReferenceListDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.NotedReferenceListDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.NotedReferenceListDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DataProperty Entity Proxy with inner DataProperty Entity implementation -->
	<bean id="dataPropertyDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.DataPropertyDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.DataPropertyDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CharacteristicProperty Entity Proxy with inner CharacteristicProperty Entity implementation -->
	<bean id="characteristicPropertyDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.CharacteristicPropertyDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.CharacteristicPropertyDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Property Entity Proxy with inner Property Entity implementation -->
	<bean id="propertyDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.PropertyDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.PropertyDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- VocabCharacteristic Entity Proxy with inner VocabCharacteristic Entity implementation -->
	<bean id="vocabCharacteristicDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.VocabCharacteristicDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.VocabCharacteristicDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- MedicalSubjectHeading Entity Proxy with inner MedicalSubjectHeading Entity implementation -->
	<bean id="medicalSubjectHeadingDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.MedicalSubjectHeadingDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.MedicalSubjectHeadingDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BibRefAnnotation Entity Proxy with inner BibRefAnnotation Entity implementation -->
	<bean id="bibRefAnnotationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.BibRefAnnotationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.BibRefAnnotationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- PublicationType Entity Proxy with inner PublicationType Entity implementation -->
	<bean id="publicationTypeDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.PublicationTypeDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.PublicationTypeDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Keyword Entity Proxy with inner Keyword Entity implementation -->
	<bean id="keywordDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.KeywordDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.KeywordDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Organization Entity Proxy with inner Organization Entity implementation -->
	<bean id="organizationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.OrganizationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.OrganizationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Person Entity Proxy with inner Person Entity implementation -->
	<bean id="personDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.PersonDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.PersonDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- UserGroup Entity Proxy with inner UserGroup Entity implementation -->
	<bean id="userGroupDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.UserGroupDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.UserGroupDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Contact Entity Proxy with inner Contact Entity implementation -->
	<bean id="contactDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.ContactDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.ContactDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AuditEvent Entity Proxy with inner AuditEvent Entity implementation -->
	<bean id="auditEventDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.AuditEventDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.AuditEventDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- User Entity Proxy with inner User Entity implementation -->
	<bean id="userDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.UserDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.UserDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- UserQuery Entity Proxy with inner UserQuery Entity implementation -->
	<bean id="userQueryDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.UserQueryDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.UserQueryDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AuditTrail Entity Proxy with inner AuditTrail Entity implementation -->
	<bean id="auditTrailDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.AuditTrailDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.AuditTrailDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- UserRole Entity Proxy with inner UserRole Entity implementation -->
	<bean id="userRoleDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.UserRoleDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.UserRoleDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- JobInfo Entity Proxy with inner JobInfo Entity implementation -->
	<bean id="jobInfoDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.JobInfoDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.JobInfoDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>


	<!-- Measurement Entity Proxy with inner Measurement Entity implementation -->
	<bean id="measurementDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.measurement.MeasurementDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.measurement.MeasurementDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Unit Entity Proxy with inner Unit Entity implementation -->
	<bean id="unitDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.measurement.UnitDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.measurement.UnitDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Parameterizable Entity Proxy with inner Parameterizable Entity implementation -->
	<bean id="parameterizableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.ParameterizableDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.ParameterizableDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Parameter Entity Proxy with inner Parameter Entity implementation -->
	<bean id="parameterDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.ParameterDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.ParameterDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ParameterizableApplication Entity Proxy with inner ParameterizableApplication Entity implementation -->
	<bean id="parameterizableApplicationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.ParameterizableApplicationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.ParameterizableApplicationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ParameterValue Entity Proxy with inner ParameterValue Entity implementation -->
	<bean id="parameterValueDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.ParameterValueDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.ParameterValueDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ProtocolApplication Entity Proxy with inner ProtocolApplication Entity implementation -->
	<bean id="protocolApplicationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.ProtocolApplicationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.ProtocolApplicationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Protocol Entity Proxy with inner Protocol Entity implementation -->
	<bean id="protocolDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.ProtocolDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.ProtocolDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Software Entity Proxy with inner Software Entity implementation -->
	<bean id="softwareDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.SoftwareDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.SoftwareDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Hardware Entity Proxy with inner Hardware Entity implementation -->
	<bean id="hardwareDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.HardwareDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.HardwareDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- SoftwareApplication Entity Proxy with inner SoftwareApplication Entity implementation -->
	<bean id="softwareApplicationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.SoftwareApplicationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.SoftwareApplicationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- HardwareApplication Entity Proxy with inner HardwareApplication Entity implementation -->
	<bean id="hardwareApplicationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.HardwareApplicationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.HardwareApplicationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- QuantitationType Entity Proxy with inner QuantitationType Entity implementation -->
	<bean id="quantitationTypeDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.quantitationtype.QuantitationTypeDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.quantitationtype.QuantitationTypeDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Describable Entity Proxy with inner Describable Entity implementation -->
	<bean id="describableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.DescribableDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.DescribableDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Securable Entity Proxy with inner Securable Entity implementation -->
	<bean id="securableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.SecurableDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.SecurableDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Auditable Entity Proxy with inner Auditable Entity implementation -->
	<bean id="auditableDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.AuditableDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.AuditableDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExpressionExperiment Entity Proxy with inner ExpressionExperiment Entity implementation -->
	<bean id="expressionExperimentDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.ExpressionExperimentDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.ExpressionExperimentDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- FactorValue Entity Proxy with inner FactorValue Entity implementation -->
	<bean id="factorValueDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.FactorValueDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.FactorValueDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExperimentalDesign Entity Proxy with inner ExperimentalDesign Entity implementation -->
	<bean id="experimentalDesignDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.ExperimentalDesignDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.ExperimentalDesignDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExperimentalFactor Entity Proxy with inner ExperimentalFactor Entity implementation -->
	<bean id="experimentalFactorDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.ExperimentalFactorDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.ExperimentalFactorDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioAssaySet Entity Proxy with inner BioAssaySet Entity implementation -->
	<bean id="bioAssaySetDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.BioAssaySetDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.BioAssaySetDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExpressionExperimentSubSet Entity Proxy with inner ExpressionExperimentSubSet Entity implementation -->
	<bean id="expressionExperimentSubSetDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.ExpressionExperimentSubSetDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.ExpressionExperimentSubSetDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CompositeSequence Entity Proxy with inner CompositeSequence Entity implementation -->
	<bean id="compositeSequenceDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.designElement.CompositeSequenceDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.designElement.CompositeSequenceDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Reporter Entity Proxy with inner Reporter Entity implementation -->
	<bean id="reporterDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.designElement.ReporterDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.designElement.ReporterDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DesignElement Entity Proxy with inner DesignElement Entity implementation -->
	<bean id="designElementDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.designElement.DesignElementDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.designElement.DesignElementDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ArrayDesign Entity Proxy with inner ArrayDesign Entity implementation -->
	<bean id="arrayDesignDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.arrayDesign.ArrayDesignDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.arrayDesign.ArrayDesignDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AlternateName Entity Proxy with inner AlternateName Entity implementation -->
	<bean id="alternateNameDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.arrayDesign.AlternateNameDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.arrayDesign.AlternateNameDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioAssay Entity Proxy with inner BioAssay Entity implementation -->
	<bean id="bioAssayDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssay.BioAssayDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssay.BioAssayDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DataVector Entity Proxy with inner DataVector Entity implementation -->
	<bean id="dataVectorDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.DataVectorDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.DataVectorDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioAssayDataVector Entity Proxy with inner BioAssayDataVector Entity implementation -->
	<bean id="bioAssayDataVectorDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.BioAssayDataVectorDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.BioAssayDataVectorDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DesignElementDataVector Entity Proxy with inner DesignElementDataVector Entity implementation -->
	<bean id="designElementDataVectorDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>

	<!-- ProcessedExpressionDataVectorDao Entity Proxy with inner ProcessedExpressionDataVectorDao Entity implementation -->
	<bean id="processedExpressionDataVectorDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.ProcessedExpressionDataVectorDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.ProcessedExpressionDataVectorDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>

	<!-- BioAssayDimension Entity Proxy with inner BioAssayDimension Entity implementation -->
	<bean id="bioAssayDimensionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.BioAssayDimensionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.BioAssayDimensionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DesignElementDimension Entity Proxy with inner DesignElementDimension Entity implementation -->
	<bean id="designElementDimensionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.DesignElementDimensionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.DesignElementDimensionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioMaterial Entity Proxy with inner BioMaterial Entity implementation -->
	<bean id="bioMaterialDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.biomaterial.BioMaterialDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.biomaterial.BioMaterialDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Treatment Entity Proxy with inner Treatment Entity implementation -->
	<bean id="treatmentDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.biomaterial.TreatmentDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.biomaterial.TreatmentDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Compound Entity Proxy with inner Compound Entity implementation -->
	<bean id="compoundDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.biomaterial.CompoundDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.biomaterial.CompoundDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CompoundMeasurement Entity Proxy with inner CompoundMeasurement Entity implementation -->
	<bean id="compoundMeasurementDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.biomaterial.CompoundMeasurementDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.biomaterial.CompoundMeasurementDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioMaterialMeasurement Entity Proxy with inner BioMaterialMeasurement Entity implementation -->
	<bean id="bioMaterialMeasurementDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.biomaterial.BioMaterialMeasurementDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.biomaterial.BioMaterialMeasurementDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Relationship Entity Proxy with inner Relationship Entity implementation -->
	<bean id="relationshipDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.RelationshipDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.RelationshipDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Gene2GOAssociation Entity Proxy with inner Gene2GOAssociation Entity implementation -->
	<bean id="gene2GOAssociationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.Gene2GOAssociationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.Gene2GOAssociationDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioSequence2GeneProduct Entity Proxy with inner BioSequence2GeneProduct Entity implementation -->
	<bean id="bioSequence2GeneProductDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.BioSequence2GeneProductDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.BioSequence2GeneProductDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Gene2OntologyEntryAssociation Entity Proxy with inner Gene2OntologyEntryAssociation Entity implementation -->
	<bean id="gene2OntologyEntryAssociationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.Gene2OntologyEntryAssociationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.Gene2OntologyEntryAssociationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Gene2GeneAssociation Entity Proxy with inner Gene2GeneAssociation Entity implementation -->
	<bean id="gene2GeneAssociationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.Gene2GeneAssociationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.Gene2GeneAssociationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ReferenceAssociation Entity Proxy with inner ReferenceAssociation Entity implementation -->
	<bean id="referenceAssociationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.ReferenceAssociationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.ReferenceAssociationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Gene2GeneCoexpression Entity Proxy with inner Gene2GeneCoexpression Entity implementation -->
	<bean id="gene2GeneCoexpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.Gene2GeneCoexpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.Gene2GeneCoexpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Probe2ProbeCoexpression Entity Proxy with inner Probe2ProbeCoexpression Entity implementation -->
	<bean id="probe2ProbeCoexpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- MouseProbeCoExpression Entity Proxy with inner MouseProbeCoExpression Entity implementation -->
	<bean id="mouseProbeCoExpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.MouseProbeCoExpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.MouseProbeCoExpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- HumanProbeCoExpression Entity Proxy with inner HumanProbeCoExpression Entity implementation -->
	<bean id="humanProbeCoExpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.HumanProbeCoExpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.HumanProbeCoExpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- RatProbeCoExpression Entity Proxy with inner RatProbeCoExpression Entity implementation -->
	<bean id="ratProbeCoExpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.RatProbeCoExpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.RatProbeCoExpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- OtherProbeCoExpression Entity Proxy with inner OtherProbeCoExpression Entity implementation -->
	<bean id="otherProbeCoExpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.OtherProbeCoExpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.OtherProbeCoExpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- MouseGeneCoExpression Entity Proxy with inner MouseGeneCoExpression Entity implementation -->
	<bean id="mouseGeneCoExpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.MouseGeneCoExpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.MouseGeneCoExpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- HumanGeneCoExpression Entity Proxy with inner HumanGeneCoExpression Entity implementation -->
	<bean id="humanGeneCoExpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.HumanGeneCoExpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.HumanGeneCoExpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- RatGeneCoExpression Entity Proxy with inner RatGeneCoExpression Entity implementation -->
	<bean id="ratGeneCoExpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.RatGeneCoExpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.RatGeneCoExpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- OtherGeneCoExpression Entity Proxy with inner OtherGeneCoExpression Entity implementation -->
	<bean id="otherGeneCoExpressionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.OtherGeneCoExpressionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.OtherGeneCoExpressionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneHomology Entity Proxy with inner GeneHomology Entity implementation -->
	<bean id="geneHomologyDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.GeneHomologyDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.GeneHomologyDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- LiteratureAssociation Entity Proxy with inner LiteratureAssociation Entity implementation -->
	<bean id="literatureAssociationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.LiteratureAssociationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.LiteratureAssociationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ProteinProteinInteraction Entity Proxy with inner ProteinProteinInteraction Entity implementation -->
	<bean id="proteinProteinInteractionDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.ProteinProteinInteractionDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.ProteinProteinInteractionDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!--
		GeneProduct2GeneProductAssociation Entity Proxy with inner GeneProduct2GeneProductAssociation Entity implementation
	-->
	<bean id="geneProduct2GeneProductAssociationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.GeneProduct2GeneProductAssociationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.GeneProduct2GeneProductAssociationDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Analysis Entity Proxy with inner Analysis Entity implementation -->
	<bean id="analysisDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.AnalysisDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.AnalysisDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AnalysisResult Entity Proxy with inner AnalysisResult Entity implementation -->
	<bean id="analysisResultDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.AnalysisResultDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.AnalysisResultDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Investigation Entity Proxy with inner Investigation Entity implementation -->
	<bean id="investigationDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.InvestigationDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.InvestigationDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AnalysisResultSet Entity Proxy with inner AnalysisResultSet Entity implementation -->
	<bean id="analysisResultSetDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.AnalysisResultSetDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.AnalysisResultSetDao</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CoexpressionAnalysis Entity Proxy with inner CoexpressionAnalysis Entity implementation -->
	<bean id="coexpressionAnalysisDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.coexpression.CoexpressionAnalysisDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.coexpression.CoexpressionAnalysisDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneCoexpressionAnalysis Entity Proxy with inner GeneCoexpressionAnalysis Entity implementation -->
	<bean id="geneCoexpressionAnalysisDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ProbeCoexpressionAnalysis Entity Proxy with inner ProbeCoexpressionAnalysis Entity implementation -->
	<bean id="probeCoexpressionAnalysisDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.coexpression.ProbeCoexpressionAnalysisDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.coexpression.ProbeCoexpressionAnalysisDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!--
		DifferentialExpressionAnalysisResult Entity Proxy with inner DifferentialExpressionAnalysisResult Entity
		implementation
	-->
	<bean id="differentialExpressionAnalysisResultDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisResultDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisResultDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DifferentialExpressionAnalysis Entity Proxy with inner DifferentialExpressionAnalysis Entity implementation -->
	<bean id="differentialExpressionAnalysisDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExpressionAnalysisResultSet Entity Proxy with inner ExpressionAnalysisResultSet Entity implementation -->
	<bean id="expressionAnalysisResultSetDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.ExpressionAnalysisResultSetDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.ExpressionAnalysisResultSetDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!--
		FactorAssociatedAnalysisResultSet Entity Proxy with inner FactorAssociatedAnalysisResultSet Entity implementation
	-->
	<bean id="factorAssociatedAnalysisResultSetDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.FactorAssociatedAnalysisResultSetDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.FactorAssociatedAnalysisResultSetDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ProbeAnalysisResult Entity Proxy with inner ProbeAnalysisResult Entity implementation -->
	<bean id="probeAnalysisResultDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.ProbeAnalysisResultDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.ProbeAnalysisResultDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExpressionExperimentSet Entity Proxy with inner ExpressionExperimentSet Entity implementation -->
	<bean id="expressionExperimentSetDao" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.ExpressionExperimentSetDaoImpl">
				<property name="sessionFactory">
					<ref local="sessionFactory" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.ExpressionExperimentSetDao
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ========================= Start of SERVICE DEFINITIONS ========================= -->




	<!-- BlatResultService Service Proxy with inner BlatResultService Service Implementation -->
	<bean id="blatResultService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.BlatResultServiceImpl">
				<property name="blatResultDao">
					<ref bean="blatResultDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.BlatResultService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BlatAssociationService Service Proxy with inner BlatAssociationService Service Implementation -->
	<bean id="blatAssociationService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.BlatAssociationServiceImpl">
				<property name="blatAssociationDao">
					<ref bean="blatAssociationDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.BlatAssociationService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BlastResultService Service Proxy with inner BlastResultService Service Implementation -->
	<bean id="blastResultService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.BlastResultServiceImpl">
				<property name="blastResultDao">
					<ref bean="blastResultDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.BlastResultService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BlastAssociationService Service Proxy with inner BlastAssociationService Service Implementation -->
	<bean id="blastAssociationService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.sequenceAnalysis.BlastAssociationServiceImpl">
				<property name="blastAssociationDao">
					<ref bean="blastAssociationDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.sequenceAnalysis.BlastAssociationService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioSequenceService Service Proxy with inner BioSequenceService Service Implementation -->
	<bean id="bioSequenceService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.biosequence.BioSequenceServiceImpl">
				<property name="bioSequenceDao">
					<ref bean="bioSequenceDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.biosequence.BioSequenceService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CandidateGeneListService Service Proxy with inner CandidateGeneListService Service Implementation -->
	<bean id="candidateGeneListService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.CandidateGeneListServiceImpl">
				<property name="candidateGeneListDao">
					<ref bean="candidateGeneListDao" />
				</property>
				<property name="candidateGeneDao">
					<ref bean="candidateGeneDao" />
				</property>
				<property name="geneDao">
					<ref bean="geneDao" />
				</property>
				<property name="auditEventDao">
					<ref bean="auditEventDao" />
				</property>
				<property name="auditTrailDao">
					<ref bean="auditTrailDao" />
				</property>
				<property name="geneService">
					<ref bean="geneService" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.CandidateGeneListService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneService Service Proxy with inner GeneService Service Implementation -->
	<bean id="geneService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.GeneServiceImpl">
				<property name="geneDao">
					<ref bean="geneDao" />
				</property>
				<property name="qtlDao">
					<ref bean="qtlDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.GeneService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>auditInterceptor</value>
				<value>monitorInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneProductService Service Proxy with inner GeneProductService Service Implementation -->
	<bean id="geneProductService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.gene.GeneProductServiceImpl">
				<property name="geneProductDao">
					<ref bean="geneProductDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.gene.GeneProductService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- TaxonService Service Proxy with inner TaxonService Service Implementation -->
	<bean id="taxonService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.TaxonServiceImpl">
				<property name="taxonDao">
					<ref bean="taxonDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.TaxonService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ChromosomeService Service Proxy with inner ChromosomeService Service Implementation -->
	<bean id="chromosomeService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.ChromosomeServiceImpl">
				<property name="chromosomeDao">
					<ref bean="chromosomeDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.ChromosomeService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ProbeAlignedRegionService Service Proxy with inner ProbeAlignedRegionService Service Implementation -->
	<bean id="probeAlignedRegionService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.ProbeAlignedRegionServiceImpl">
				<property name="probeAlignedRegionDao">
					<ref bean="probeAlignedRegionDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.ProbeAlignedRegionService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
			</list>
		</property>
	</bean>
	
	<!-- PhysicalLocation Service Proxy with inner PhysicalLocation Service Implementation -->
	<bean id="physicalLocationService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.genome.PhysicalLocationServiceImpl">
				<property name="physicalLocationDao">
					<ref bean="physicalLocationDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.genome.PhysicalLocationService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	
	<!-- BibliographicReferenceService Service Proxy with inner BibliographicReferenceService Service Implementation -->
	<bean id="bibliographicReferenceService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.BibliographicReferenceServiceImpl">
				<property name="bibliographicReferenceDao">
					<ref bean="bibliographicReferenceDao" />
				</property>
				<property name="externalDatabaseDao">
					<ref bean="externalDatabaseDao" />
				</property>
				<property name="localFileDao">
					<ref bean="localFileDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.BibliographicReferenceService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExternalDatabaseService Service Proxy with inner ExternalDatabaseService Service Implementation -->
	<bean id="externalDatabaseService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.ExternalDatabaseServiceImpl">
				<property name="externalDatabaseDao">
					<ref bean="externalDatabaseDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.ExternalDatabaseService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- NotedReferenceListService Service Proxy with inner NotedReferenceListService Service Implementation -->
	<bean id="notedReferenceListService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.NotedReferenceListServiceImpl">
				<property name="notedReferenceDao">
					<ref bean="notedReferenceDao" />
				</property>
				<property name="notedReferenceListDao">
					<ref bean="notedReferenceListDao" />
				</property>
				<property name="bibliographicReferenceDao">
					<ref bean="bibliographicReferenceDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.NotedReferenceListService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- FileFormatService Service Proxy with inner FileFormatService Service Implementation -->
	<bean id="fileFormatService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.FileFormatServiceImpl">
				<property name="fileFormatDao">
					<ref bean="fileFormatDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.FileFormatService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- LocalFileService Service Proxy with inner LocalFileService Service Implementation -->
	<bean id="localFileService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.LocalFileServiceImpl">
				<property name="localFileDao">
					<ref bean="localFileDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.LocalFileService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DatabaseEntryService Service Proxy with inner DatabaseEntryService Service Implementation -->
	<bean id="databaseEntryService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.DatabaseEntryServiceImpl">
				<property name="databaseEntryDao">
					<ref bean="databaseEntryDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.DatabaseEntryService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CharacteristicService Service Proxy with inner CharacteristicService Service Implementation -->
	<bean id="characteristicService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.description.CharacteristicServiceImpl">
				<property name="characteristicDao">
					<ref bean="characteristicDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.description.CharacteristicService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- PersonService Service Proxy with inner PersonService Service Implementation -->
	<bean id="personService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.PersonServiceImpl">
				<property name="personDao">
					<ref bean="personDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.PersonService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- UserService Service Proxy with inner UserService Service Implementation -->
	<bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.UserServiceImpl">
				<property name="userDao">
					<ref bean="userDao" />
				</property>
				<property name="userRoleDao">
					<ref bean="userRoleDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.UserService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- UserQueryService Service Proxy with inner UserQueryService Service Implementation -->
	<bean id="userQueryService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.UserQueryServiceImpl">
				<property name="userQueryDao">
					<ref bean="userQueryDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.UserService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<!--   <value>addOrRemoveFromACLInterceptor</value>-->
			</list>
		</property>
	</bean>
	<!-- ContactService Service Proxy with inner ContactService Service Implementation -->
	<bean id="contactService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.ContactServiceImpl">
				<property name="contactDao">
					<ref bean="contactDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.ContactService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AuditTrailService Service Proxy with inner AuditTrailService Service Implementation -->
	<bean id="auditTrailService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.AuditTrailServiceImpl">
				<property name="auditTrailDao">
					<ref bean="auditTrailDao" />
				</property>
				<property name="userDao">
					<ref bean="userDao" />
				</property>
				<property name="auditEventDao">
					<ref bean="auditEventDao" />
				</property>
				<property name="auditableService">
					<ref bean="auditableService" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.AuditTrailService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- UserGroupService Service Proxy with inner UserGroupService Service Implementation -->
	<bean id="userGroupService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.UserGroupServiceImpl">
				<property name="userGroupDao">
					<ref bean="userGroupDao" />
				</property>
				<property name="userDao">
					<ref bean="userDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.UserGroupService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AuditEventService Service Proxy with inner AuditEventService Service Implementation -->
	<bean id="auditEventService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.auditAndSecurity.AuditEventServiceImpl">
				<property name="auditEventDao">
					<ref bean="auditEventDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.auditAndSecurity.AuditEventService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- MeasurementService Service Proxy with inner MeasurementService Service Implementation -->
	<bean id="measurementService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.measurement.MeasurementServiceImpl">
				<property name="measurementDao">
					<ref bean="measurementDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.measurement.MeasurementService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- HardwareService Service Proxy with inner HardwareService Service Implementation -->
	<bean id="hardwareService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.HardwareServiceImpl">
				<property name="hardwareDao">
					<ref bean="hardwareDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.HardwareService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ProtocolService Service Proxy with inner ProtocolService Service Implementation -->
	<bean id="protocolService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.ProtocolServiceImpl">
				<property name="protocolDao">
					<ref bean="protocolDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.ProtocolService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- SoftwareService Service Proxy with inner SoftwareService Service Implementation -->
	<bean id="softwareService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.protocol.SoftwareServiceImpl">
				<property name="softwareDao">
					<ref bean="softwareDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.protocol.SoftwareService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- QuantitationTypeService Service Proxy with inner QuantitationTypeService Service Implementation -->
	<bean id="quantitationTypeService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.quantitationtype.QuantitationTypeServiceImpl">
				<property name="quantitationTypeDao">
					<ref bean="quantitationTypeDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.quantitationtype.QuantitationTypeService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AuditableService Service Proxy with inner AuditableService Service Implementation -->
	<bean id="auditableService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.common.AuditableServiceImpl">
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.common.AuditableService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExpressionExperimentService Service Proxy with inner ExpressionExperimentService Service Implementation -->
	<bean id="expressionExperimentService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.ExpressionExperimentServiceImpl">
				<property name="expressionExperimentDao">
					<ref bean="expressionExperimentDao" />
				</property>
				<property name="bioAssayDimensionDao">
					<ref bean="bioAssayDimensionDao" />
				</property>
				<property name="designElementDataVectorDao">
					<ref bean="designElementDataVectorDao" />
				</property>
				<property name="arrayDesignDao">
					<ref bean="arrayDesignDao" />
				</property>
				<property name="probe2ProbeCoexpressionDao">
					<ref bean="probe2ProbeCoexpressionDao" />
				</property>
				<property name="differentialExpressionAnalysisDao">
					<ref bean="differentialExpressionAnalysisDao" />
				</property>
				<property name="geneCoexpressionAnalysisDao">
					<ref bean="geneCoexpressionAnalysisDao" />
				</property>
				<property name="expressionExperimentSetDao">
					<ref bean="expressionExperimentSetDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.ExpressionExperimentService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
				<value>monitorInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExperimentalDesignService Service Proxy with inner ExperimentalDesignService Service Implementation -->
	<bean id="experimentalDesignService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.ExperimentalDesignServiceImpl">
				<property name="experimentalDesignDao">
					<ref bean="experimentalDesignDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.ExperimentalDesignService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExperimentalFactorService Service Proxy with inner ExperimentalFactorService Service Implementation -->
	<bean id="experimentalFactorService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.ExperimentalFactorServiceImpl">
				<property name="experimentalFactorDao">
					<ref bean="experimentalFactorDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.ExperimentalFactorService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- FactorValueService Service Proxy with inner FactorValueService Service Implementation -->
	<bean id="factorValueService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.FactorValueServiceImpl">
				<property name="factorValueDao">
					<ref bean="factorValueDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.FactorValueService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
			</list>
		</property>
	</bean>
	<!--
		ExpressionExperimentSubSetService Service Proxy with inner ExpressionExperimentSubSetService Service Implementation
	-->
	<bean id="expressionExperimentSubSetService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.experiment.ExpressionExperimentSubSetServiceImpl">
				<property name="expressionExperimentSubSetDao">
					<ref bean="expressionExperimentSubSetDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.experiment.ExpressionExperimentSubSetService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CompositeSequenceService Service Proxy with inner CompositeSequenceService Service Implementation -->
	<bean id="compositeSequenceService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.designElement.CompositeSequenceServiceImpl">
				<property name="compositeSequenceDao">
					<ref bean="compositeSequenceDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.designElement.CompositeSequenceService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ReporterService Service Proxy with inner ReporterService Service Implementation -->
	<bean id="reporterService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.designElement.ReporterServiceImpl">
				<property name="reporterDao">
					<ref bean="reporterDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.designElement.ReporterService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ArrayDesignService Service Proxy with inner ArrayDesignService Service Implementation -->
	<bean id="arrayDesignService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.arrayDesign.ArrayDesignServiceImpl">
				<property name="arrayDesignDao">
					<ref bean="arrayDesignDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.arrayDesign.ArrayDesignService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioAssayService Service Proxy with inner BioAssayService Service Implementation -->
	<bean id="bioAssayService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssay.BioAssayServiceImpl">
				<property name="bioAssayDao">
					<ref bean="bioAssayDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
				<property name="bioMaterialService">
					<ref bean="bioMaterialService" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssay.BioAssayService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
				<value>monitorInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioAssayDataVectorService Service Proxy with inner BioAssayDataVectorService Service Implementation -->
	<bean id="bioAssayDataVectorService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.BioAssayDataVectorServiceImpl">
				<property name="bioAssayDataVectorDao">
					<ref bean="bioAssayDataVectorDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.BioAssayDataVectorService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DesignElementDataVectorService Service Proxy with inner DesignElementDataVectorService Service Implementation -->
	<bean id="designElementDataVectorService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorServiceImpl">
				<property name="designElementDataVectorDao">
					<ref bean="designElementDataVectorDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.DesignElementDataVectorService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>monitorInterceptor</value>
			</list>
		</property>
	</bean>

	<!--
		ProcessedExpressionDataVectorService Proxy with inner ProcessedExpressionDataVectorService Service Implementation
	-->
	<bean id="processedExpressionDataVectorService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.ProcessedExpressionDataVectorServiceImpl">
				<property name="processedExpressionDataVectorDao">
					<ref bean="processedExpressionDataVectorDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.ProcessedExpressionDataVectorService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>monitorInterceptor</value>
			</list>
		</property>
	</bean>

	<!-- BioAssayDimensionService Service Proxy with inner BioAssayDimensionService Service Implementation -->
	<bean id="bioAssayDimensionService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.BioAssayDimensionServiceImpl">
				<property name="bioAssayDimensionDao">
					<ref bean="bioAssayDimensionDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.BioAssayDimensionService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- DesignElementDimensionService Service Proxy with inner DesignElementDimensionService Service Implementation -->
	<bean id="designElementDimensionService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.bioAssayData.DesignElementDimensionServiceImpl">
				<property name="designElementDimensionDao">
					<ref bean="designElementDimensionDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.bioAssayData.DesignElementDimensionService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioMaterialService Service Proxy with inner BioMaterialService Service Implementation -->
	<bean id="bioMaterialService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.biomaterial.BioMaterialServiceImpl">
				<property name="bioMaterialDao">
					<ref bean="bioMaterialDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.biomaterial.BioMaterialService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- TreatmentService Service Proxy with inner TreatmentService Service Implementation -->
	<bean id="treatmentService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.biomaterial.TreatmentServiceImpl">
				<property name="treatmentDao">
					<ref bean="treatmentDao" />
				</property>
				<property name="auditableDao">
					<ref bean="auditableDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.biomaterial.TreatmentService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- CompoundService Service Proxy with inner CompoundService Service Implementation -->
	<bean id="compoundService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.expression.biomaterial.CompoundServiceImpl">
				<property name="compoundDao">
					<ref bean="compoundDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.expression.biomaterial.CompoundService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Probe2ProbeCoexpressionService Service Proxy with inner Probe2ProbeCoexpressionService Service Implementation -->
	<bean id="probe2ProbeCoexpressionService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionServiceImpl">
				<property name="humanProbeCoExpressionDao">
					<ref bean="humanProbeCoExpressionDao" />
				</property>
				<property name="mouseProbeCoExpressionDao">
					<ref bean="mouseProbeCoExpressionDao" />
				</property>
				<property name="otherProbeCoExpressionDao">
					<ref bean="otherProbeCoExpressionDao" />
				</property>
				<property name="ratProbeCoExpressionDao">
					<ref bean="ratProbeCoExpressionDao" />
				</property>
				<property name="probe2ProbeCoexpressionDao">
					<ref bean="probe2ProbeCoexpressionDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.Probe2ProbeCoexpressionService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>monitorInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Gene2GeneCoexpressionService Service Proxy with inner Gene2GeneCoexpressionService Service Implementation -->
	<bean id="gene2GeneCoexpressionService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.coexpression.Gene2GeneCoexpressionServiceImpl">
				<property name="ratGeneCoExpressionDao">
					<ref bean="ratGeneCoExpressionDao" />
				</property>
				<property name="otherGeneCoExpressionDao">
					<ref bean="otherGeneCoExpressionDao" />
				</property>
				<property name="humanGeneCoExpressionDao">
					<ref bean="humanGeneCoExpressionDao" />
				</property>
				<property name="mouseGeneCoExpressionDao">
					<ref bean="mouseGeneCoExpressionDao" />
				</property>
				<property name="gene2GeneCoexpressionDao">
					<ref bean="gene2GeneCoexpressionDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.coexpression.Gene2GeneCoexpressionService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>monitorInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- Gene2GOAssociationService Service Proxy with inner Gene2GOAssociationService Service Implementation -->
	<bean id="gene2GOAssociationService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.Gene2GOAssociationServiceImpl">
				<property name="gene2GOAssociationDao">
					<ref bean="gene2GOAssociationDao" />
				</property>
				<property name="vocabCharacteristicDao">
					<ref bean="vocabCharacteristicDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.Gene2GOAssociationService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- BioSequence2GeneProductService Service Proxy with inner BioSequence2GeneProductService Service Implementation -->
	<bean id="bioSequence2GeneProductService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.association.BioSequence2GeneProductServiceImpl">
				<property name="bioSequence2GeneProductDao">
					<ref bean="bioSequence2GeneProductDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.association.BioSequence2GeneProductService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- AnalysisService Service Proxy with inner AnalysisService Service Implementation -->
	<bean id="analysisService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.AnalysisServiceImpl">
				<property name="analysisDao">
					<ref bean="analysisDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.AnalysisService</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- GeneCoexpressionAnalysisService Service Proxy with inner GeneCoexpressionAnalysisService Service Implementation -->
	<bean id="geneCoexpressionAnalysisService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisServiceImpl">
				<property name="geneCoexpressionAnalysisDao">
					<ref bean="geneCoexpressionAnalysisDao" />
				</property>
				<property name="analysisDao">
					<ref bean="analysisDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.coexpression.GeneCoexpressionAnalysisService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!--
		ProbeCoexpressionAnalysisService Service Proxy with inner ProbeCoexpressionAnalysisService Service Implementation
	-->
	<bean id="probeCoexpressionAnalysisService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.coexpression.ProbeCoexpressionAnalysisServiceImpl">
				<property name="probeCoexpressionAnalysisDao">
					<ref bean="probeCoexpressionAnalysisDao" />
				</property>
				<property name="analysisDao">
					<ref bean="analysisDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.coexpression.ProbeCoexpressionAnalysisService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!--
		DifferentialExpressionAnalysisResultService Service Proxy with inner DifferentialExpressionAnalysisResultService
		Service Implementation
	-->
	<bean id="differentialExpressionAnalysisResultService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisResultServiceImpl">
				<property name="differentialExpressionAnalysisResultDao">
					<ref bean="differentialExpressionAnalysisResultDao" />
				</property>
				<property name="expressionAnalysisResultSetDao">
					<ref bean="expressionAnalysisResultSetDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisResultService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
			</list>
		</property>
	</bean>
	<!--
		DifferentialExpressionAnalysisService Service Proxy with inner DifferentialExpressionAnalysisService Service
		Implementation
	-->
	<bean id="differentialExpressionAnalysisService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisServiceImpl">
				<property name="differentialExpressionAnalysisDao">
					<ref bean="differentialExpressionAnalysisDao" />
				</property>
				<property name="analysisDao">
					<ref bean="analysisDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.diff.DifferentialExpressionAnalysisService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ExpressionExperimentSetService Service Proxy with inner ExpressionExperimentSetService Service Implementation -->
	<bean id="expressionExperimentSetService" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<bean class="ubic.gemma.model.analysis.expression.ExpressionExperimentSetServiceImpl">
				<property name="expressionExperimentSetDao">
					<ref bean="expressionExperimentSetDao" />
				</property>
			</bean>
		</property>
		<property name="proxyInterfaces">
			<value>ubic.gemma.model.analysis.expression.ExpressionExperimentSetService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<value>serviceTransactionInterceptor</value>
				<value>hibernateInterceptor</value>
				<value>serviceSecurityInterceptor</value>
				<value>addOrRemoveFromACLInterceptor</value>
				<value>auditInterceptor</value>
				<value>monitorInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- ========================= End of SERVICE DEFINITIONS ========================= -->
</beans>
