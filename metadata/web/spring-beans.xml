<!--
This document is a "merge file" used by XDoclet to automagically generate a web-context
for the application.  The generated web-context will have the name xxx-servlet.xml and is
located in web/WEB-INF/.	

author: keshav
version: $Id$
-->
 
<!-- EXTERNAL DATABASE SESSION FACTORY -->
  <bean id="sessionFactoryGoldenPathHuman" class="org.springframework.orm.hibernate.LocalSessionFactoryBean">
        <property name="dataSource"><ref bean="dataSourceGoldenPathHuman"/></property>
        <property name="mappingResources">
            <list>
            </list>
        </property>
		<property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">net.sf.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.provider_class">net.sf.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.query_cache_factory">net.sf.hibernate.cache.StandardQueryCacheFactory</prop>
                <prop key="hibernate.show_sql">true</prop>				
            </props>
        </property>
	</bean>	
	
<!-- DATASOURCE USED BY SESSION FACTORY ABOVE -->	
	<bean id="dataSourceGoldenPathHuman" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName"><value>com.mysql.jdbc.Driver</value></property>
        <property name="username"><value>pavlidis</value></property>
        <property name="password"><value>toast</value></property>
        <property name="url"><value>jdbc:mysql://localhost:3306/hg17</value></property>
    </bean>

<!-- SPRING WEBFLOWS -->
<!-- These entries are used with the xxx-flow.xml file.  The location of this file is defined
	 in the FlowFactoryBean (ie. see pubMed.Search below).
-->	

	<!-- Controller for the entire application.  This can be parameterized by adding the  
		_flowId to the client view (ie. jsp).  If this is not specified, you must specify
		an HttpServletFlowExecutionManager (ie. see pubMedSearchFrontController).
	-->
    <bean id="frontController" name="/search.htm" class="org.springframework.web.flow.mvc.FlowController">
	   <property name="flowExecutionManager">
		   <bean class="org.springframework.web.flow.execution.servlet.HttpServletFlowExecutionManager"/>
	   </property>
    </bean>	
	
	<!-- Parent Flow (search flow) -->
	<bean id="pubMedSearchController" name="/pubMedSearch.htm" class="org.springframework.web.flow.mvc.FlowController">
		<property name="flowExecutionManager">
			<bean class="org.springframework.web.flow.execution.servlet.HttpServletFlowExecutionManager">
				<property name="flow" ref="pubMed.Search"/>
			</bean>
		</property>
	</bean>
	
	<!-- Xml FlowBuilder definition for the search flow -->
	<bean id="pubMed.Search" class="org.springframework.web.flow.config.FlowFactoryBean">
		<property name="flowBuilder">
			<bean class="org.springframework.web.flow.config.XmlFlowBuilder">
				<property name="resource" value="classpath:edu/columbia/gemma/controller/flow/pubMedSearch-flow.xml"/>
			</bean>
		</property>
	</bean>
	
	<!-- Next 4 beans are called from pubMedSearch-flow.xml -->
	<bean id="pubMed.Search.criteria.formAction" class="org.springframework.web.flow.action.FormAction">
		<property name="formObjectName" value="query"/>
		<property name="formObjectClass" value="edu.columbia.gemma.common.description.BibliographicReferenceImpl"/>
		<property name="formObjectScopeAsString" value="flow"/>
<!--		
		<property name="validator">
			<bean id="pubMedQueryValidator" class="edu.columbia.gemma.controller.domain.PubMedValidator"/>
		</property>
-->		
	</bean>
	
	<bean id="pubMed.Search.executeQuery" class="edu.columbia.gemma.controller.flow.action.PubMedExecuteQueryAction">
		<property name="bibliographicReferenceService">
			<ref bean="bibliographicReferenceService"/>
		</property>
		<property name="pubMedXmlFetcher">
			<ref bean="pubMedXmlFetcher"/>
		</property>
	</bean>	

    <bean id="pubMed.Search.getAllBibRef" class="edu.columbia.gemma.controller.flow.action.BibRefExecuteQueryAction">
		<property name="bibliographicReferenceService">
			<ref bean="bibliographicReferenceService"/>
		</property>
	</bean>
		
	<!-- Maps parameters in an event (ie. HttpServletRequestEvent, ContextEvent)
		 to attributes set in flow scope 
    -->
    <bean id="pubMed.Search.id.set" class="org.springframework.web.flow.action.EventParameterMapperAction">			
		<property name="mapping" value="title"/><!--,java.lang.String"/>-->
		<property name="targetScopeAsString"><value>flow</value></property>	
	</bean>
	
	<!-- Mappings executed when mapping input data from a parent flow to a subflow -->
	<bean id="pubMed.id.attributeMapper" class="org.springframework.web.flow.support.ParameterizableFlowAttributeMapper">
		<property name="inputMappings">
			<list>
				<value>title</value>
			</list>
		</property>
	</bean>

	<!-- Subflow (detail flow) -->
	<bean id="pubMedDetailController" name="/pubMedDetail.htm" class="org.springframework.web.flow.mvc.FlowController">
		<property name="flowExecutionManager">
			<bean class="org.springframework.web.flow.execution.servlet.HttpServletFlowExecutionManager">
				<property name="flow" ref="pubMed.Detail"/>
			</bean>
		</property>
	</bean>

	<!-- xml FlowBuilder definition for the detail flow -->
	<bean id="pubMed.Detail" class="org.springframework.web.flow.config.FlowFactoryBean">
		<property name="flowBuilder">
			<bean class="org.springframework.web.flow.config.XmlFlowBuilder">
				<property name="resource" value="classpath:edu/columbia/gemma/controller/flow/pubMedDetail-flow.xml"/>
			</bean>
		</property>
	</bean>
	
	<!-- equivalent to the pubMed.Search.executeQuery defined above -->
	<bean id="pubMed.Detail.criteria.formAction.getFormAction" class="edu.columbia.gemma.controller.flow.action.GetPubMedAction">
		<property name="bibliographicReferenceService">
			<ref bean="bibliographicReferenceService"/>
		</property>
	</bean>	
	
	<!-- A type conversion service, a more flexible/threadsafe/lightweight alternative to the PropertyEditor! -->
	<bean id="conversion.service" class="org.springframework.binding.convert.support.DefaultConversionService" autowire="byType"/>

	<!-- A formatter registry, a thread-safe cache for Formatters: a thread-safe, lighter weight alt. to PropertyEditors! -->
	<bean id="formatter.locator" class="org.springframework.binding.format.support.ThreadLocalFormatterLocator" autowire="byType"/>

	<!-- A broadcaster that will notify the formatter registry to cleanup all thread locals on app shutdown -->
	<bean id="thread.cleanupBroadcaster" class="org.springframework.binding.thread.support.DefaultThreadCleanupBroadcaster"/>
<!--		
    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>		
				<prop key="/bulkLoadForm.htm">loaderController</prop>
				<prop key="/pubMedForm.htm">pubMedXmlController</prop>
				<prop key="/pubMedArticleListForm.htm">pubMedArticleListController</prop>
            </props>
        </property>
    </bean>
-->	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!-- The default place for this is in WEB-INF/classes -->
		<property name="basename"><value>messages</value></property>
    </bean>
	
	<!-- View Resolver for JSPs -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="requestContextAttribute"><value>rc</value></property>
        <property name="viewClass"><value>org.springframework.web.servlet.view.JstlView</value></property>
        <property name="prefix"><value>/WEB-INF/pages/</value></property>
        <property name="suffix"><value>.jsp</value></property>
    </bean>